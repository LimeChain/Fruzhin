// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LightClientMessage.proto

package com.limechain.network.substream.lightclient.pb;

public final class LightClientMessage {
  private LightClientMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PairOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Pair)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The first element of the pair.
     * </pre>
     *
     * <code>bytes fst = 1;</code>
     * @return The fst.
     */
    com.google.protobuf.ByteString getFst();

    /**
     * <pre>
     * The second element of the pair.
     * </pre>
     *
     * <code>bytes snd = 2;</code>
     * @return The snd.
     */
    com.google.protobuf.ByteString getSnd();
  }
  /**
   * <pre>
   * A pair of arbitrary bytes.
   * </pre>
   *
   * Protobuf type {@code Pair}
   */
  public static final class Pair extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Pair)
      PairOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Pair.newBuilder() to construct.
    private Pair(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Pair() {
      fst_ = com.google.protobuf.ByteString.EMPTY;
      snd_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Pair();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Pair(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              fst_ = input.readBytes();
              break;
            }
            case 18: {

              snd_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_Pair_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_Pair_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair.Builder.class);
    }

    public static final int FST_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString fst_;
    /**
     * <pre>
     * The first element of the pair.
     * </pre>
     *
     * <code>bytes fst = 1;</code>
     * @return The fst.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFst() {
      return fst_;
    }

    public static final int SND_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString snd_;
    /**
     * <pre>
     * The second element of the pair.
     * </pre>
     *
     * <code>bytes snd = 2;</code>
     * @return The snd.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSnd() {
      return snd_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!fst_.isEmpty()) {
        output.writeBytes(1, fst_);
      }
      if (!snd_.isEmpty()) {
        output.writeBytes(2, snd_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!fst_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, fst_);
      }
      if (!snd_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, snd_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair)) {
        return super.equals(obj);
      }
      com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair other = (com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair) obj;

      if (!getFst()
          .equals(other.getFst())) return false;
      if (!getSnd()
          .equals(other.getSnd())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FST_FIELD_NUMBER;
      hash = (53 * hash) + getFst().hashCode();
      hash = (37 * hash) + SND_FIELD_NUMBER;
      hash = (53 * hash) + getSnd().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A pair of arbitrary bytes.
     * </pre>
     *
     * Protobuf type {@code Pair}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Pair)
        com.limechain.network.substream.lightclient.pb.LightClientMessage.PairOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_Pair_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_Pair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair.Builder.class);
      }

      // Construct using com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        fst_ = com.google.protobuf.ByteString.EMPTY;

        snd_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_Pair_descriptor;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair getDefaultInstanceForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair.getDefaultInstance();
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair build() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair buildPartial() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair result = new com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair(this);
        result.fst_ = fst_;
        result.snd_ = snd_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair) {
          return mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair other) {
        if (other == com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair.getDefaultInstance()) return this;
        if (other.getFst() != com.google.protobuf.ByteString.EMPTY) {
          setFst(other.getFst());
        }
        if (other.getSnd() != com.google.protobuf.ByteString.EMPTY) {
          setSnd(other.getSnd());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString fst_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The first element of the pair.
       * </pre>
       *
       * <code>bytes fst = 1;</code>
       * @return The fst.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getFst() {
        return fst_;
      }
      /**
       * <pre>
       * The first element of the pair.
       * </pre>
       *
       * <code>bytes fst = 1;</code>
       * @param value The fst to set.
       * @return This builder for chaining.
       */
      public Builder setFst(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fst_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The first element of the pair.
       * </pre>
       *
       * <code>bytes fst = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFst() {
        
        fst_ = getDefaultInstance().getFst();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString snd_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The second element of the pair.
       * </pre>
       *
       * <code>bytes snd = 2;</code>
       * @return The snd.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSnd() {
        return snd_;
      }
      /**
       * <pre>
       * The second element of the pair.
       * </pre>
       *
       * <code>bytes snd = 2;</code>
       * @param value The snd to set.
       * @return This builder for chaining.
       */
      public Builder setSnd(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        snd_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The second element of the pair.
       * </pre>
       *
       * <code>bytes snd = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSnd() {
        
        snd_ = getDefaultInstance().getSnd();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Pair)
    }

    // @@protoc_insertion_point(class_scope:Pair)
    private static final com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair();
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Pair>
        PARSER = new com.google.protobuf.AbstractParser<Pair>() {
      @java.lang.Override
      public Pair parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Pair(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Pair> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Pair> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.RemoteCallRequest remote_call_request = 1;</code>
     * @return Whether the remoteCallRequest field is set.
     */
    boolean hasRemoteCallRequest();
    /**
     * <code>.RemoteCallRequest remote_call_request = 1;</code>
     * @return The remoteCallRequest.
     */
    com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest getRemoteCallRequest();
    /**
     * <code>.RemoteCallRequest remote_call_request = 1;</code>
     */
    com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequestOrBuilder getRemoteCallRequestOrBuilder();

    /**
     * <code>.RemoteReadRequest remote_read_request = 2;</code>
     * @return Whether the remoteReadRequest field is set.
     */
    boolean hasRemoteReadRequest();
    /**
     * <code>.RemoteReadRequest remote_read_request = 2;</code>
     * @return The remoteReadRequest.
     */
    com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest getRemoteReadRequest();
    /**
     * <code>.RemoteReadRequest remote_read_request = 2;</code>
     */
    com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequestOrBuilder getRemoteReadRequestOrBuilder();

    /**
     * <code>.RemoteHeaderRequest remote_header_request = 3;</code>
     * @return Whether the remoteHeaderRequest field is set.
     */
    boolean hasRemoteHeaderRequest();
    /**
     * <code>.RemoteHeaderRequest remote_header_request = 3;</code>
     * @return The remoteHeaderRequest.
     */
    com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest getRemoteHeaderRequest();
    /**
     * <code>.RemoteHeaderRequest remote_header_request = 3;</code>
     */
    com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequestOrBuilder getRemoteHeaderRequestOrBuilder();

    /**
     * <code>.RemoteReadChildRequest remote_read_child_request = 4;</code>
     * @return Whether the remoteReadChildRequest field is set.
     */
    boolean hasRemoteReadChildRequest();
    /**
     * <code>.RemoteReadChildRequest remote_read_child_request = 4;</code>
     * @return The remoteReadChildRequest.
     */
    com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest getRemoteReadChildRequest();
    /**
     * <code>.RemoteReadChildRequest remote_read_child_request = 4;</code>
     */
    com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequestOrBuilder getRemoteReadChildRequestOrBuilder();

    /**
     * <code>.RemoteChangesRequest remote_changes_request = 5;</code>
     * @return Whether the remoteChangesRequest field is set.
     */
    boolean hasRemoteChangesRequest();
    /**
     * <code>.RemoteChangesRequest remote_changes_request = 5;</code>
     * @return The remoteChangesRequest.
     */
    com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest getRemoteChangesRequest();
    /**
     * <code>.RemoteChangesRequest remote_changes_request = 5;</code>
     */
    com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequestOrBuilder getRemoteChangesRequestOrBuilder();

    public com.limechain.network.substream.lightclient.pb.LightClientMessage.Request.RequestCase getRequestCase();
  }
  /**
   * <pre>
   * Enumerate all possible light client request messages.
   * </pre>
   *
   * Protobuf type {@code Request}
   */
  public static final class Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Request)
      RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Request.newBuilder() to construct.
    private Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Request() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Request();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.Builder subBuilder = null;
              if (requestCase_ == 1) {
                subBuilder = ((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest) request_).toBuilder();
              }
              request_ =
                  input.readMessage(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest) request_);
                request_ = subBuilder.buildPartial();
              }
              requestCase_ = 1;
              break;
            }
            case 18: {
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.Builder subBuilder = null;
              if (requestCase_ == 2) {
                subBuilder = ((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest) request_).toBuilder();
              }
              request_ =
                  input.readMessage(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest) request_);
                request_ = subBuilder.buildPartial();
              }
              requestCase_ = 2;
              break;
            }
            case 26: {
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.Builder subBuilder = null;
              if (requestCase_ == 3) {
                subBuilder = ((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest) request_).toBuilder();
              }
              request_ =
                  input.readMessage(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest) request_);
                request_ = subBuilder.buildPartial();
              }
              requestCase_ = 3;
              break;
            }
            case 34: {
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.Builder subBuilder = null;
              if (requestCase_ == 4) {
                subBuilder = ((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest) request_).toBuilder();
              }
              request_ =
                  input.readMessage(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest) request_);
                request_ = subBuilder.buildPartial();
              }
              requestCase_ = 4;
              break;
            }
            case 42: {
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.Builder subBuilder = null;
              if (requestCase_ == 5) {
                subBuilder = ((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest) request_).toBuilder();
              }
              request_ =
                  input.readMessage(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest) request_);
                request_ = subBuilder.buildPartial();
              }
              requestCase_ = 5;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_Request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.limechain.network.substream.lightclient.pb.LightClientMessage.Request.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.Request.Builder.class);
    }

    private int requestCase_ = 0;
    private java.lang.Object request_;
    public enum RequestCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      REMOTE_CALL_REQUEST(1),
      REMOTE_READ_REQUEST(2),
      REMOTE_HEADER_REQUEST(3),
      REMOTE_READ_CHILD_REQUEST(4),
      REMOTE_CHANGES_REQUEST(5),
      REQUEST_NOT_SET(0);
      private final int value;
      private RequestCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RequestCase valueOf(int value) {
        return forNumber(value);
      }

      public static RequestCase forNumber(int value) {
        switch (value) {
          case 1: return REMOTE_CALL_REQUEST;
          case 2: return REMOTE_READ_REQUEST;
          case 3: return REMOTE_HEADER_REQUEST;
          case 4: return REMOTE_READ_CHILD_REQUEST;
          case 5: return REMOTE_CHANGES_REQUEST;
          case 0: return REQUEST_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public RequestCase
    getRequestCase() {
      return RequestCase.forNumber(
          requestCase_);
    }

    public static final int REMOTE_CALL_REQUEST_FIELD_NUMBER = 1;
    /**
     * <code>.RemoteCallRequest remote_call_request = 1;</code>
     * @return Whether the remoteCallRequest field is set.
     */
    @java.lang.Override
    public boolean hasRemoteCallRequest() {
      return requestCase_ == 1;
    }
    /**
     * <code>.RemoteCallRequest remote_call_request = 1;</code>
     * @return The remoteCallRequest.
     */
    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest getRemoteCallRequest() {
      if (requestCase_ == 1) {
         return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest) request_;
      }
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.getDefaultInstance();
    }
    /**
     * <code>.RemoteCallRequest remote_call_request = 1;</code>
     */
    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequestOrBuilder getRemoteCallRequestOrBuilder() {
      if (requestCase_ == 1) {
         return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest) request_;
      }
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.getDefaultInstance();
    }

    public static final int REMOTE_READ_REQUEST_FIELD_NUMBER = 2;
    /**
     * <code>.RemoteReadRequest remote_read_request = 2;</code>
     * @return Whether the remoteReadRequest field is set.
     */
    @java.lang.Override
    public boolean hasRemoteReadRequest() {
      return requestCase_ == 2;
    }
    /**
     * <code>.RemoteReadRequest remote_read_request = 2;</code>
     * @return The remoteReadRequest.
     */
    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest getRemoteReadRequest() {
      if (requestCase_ == 2) {
         return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest) request_;
      }
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.getDefaultInstance();
    }
    /**
     * <code>.RemoteReadRequest remote_read_request = 2;</code>
     */
    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequestOrBuilder getRemoteReadRequestOrBuilder() {
      if (requestCase_ == 2) {
         return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest) request_;
      }
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.getDefaultInstance();
    }

    public static final int REMOTE_HEADER_REQUEST_FIELD_NUMBER = 3;
    /**
     * <code>.RemoteHeaderRequest remote_header_request = 3;</code>
     * @return Whether the remoteHeaderRequest field is set.
     */
    @java.lang.Override
    public boolean hasRemoteHeaderRequest() {
      return requestCase_ == 3;
    }
    /**
     * <code>.RemoteHeaderRequest remote_header_request = 3;</code>
     * @return The remoteHeaderRequest.
     */
    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest getRemoteHeaderRequest() {
      if (requestCase_ == 3) {
         return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest) request_;
      }
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.getDefaultInstance();
    }
    /**
     * <code>.RemoteHeaderRequest remote_header_request = 3;</code>
     */
    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequestOrBuilder getRemoteHeaderRequestOrBuilder() {
      if (requestCase_ == 3) {
         return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest) request_;
      }
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.getDefaultInstance();
    }

    public static final int REMOTE_READ_CHILD_REQUEST_FIELD_NUMBER = 4;
    /**
     * <code>.RemoteReadChildRequest remote_read_child_request = 4;</code>
     * @return Whether the remoteReadChildRequest field is set.
     */
    @java.lang.Override
    public boolean hasRemoteReadChildRequest() {
      return requestCase_ == 4;
    }
    /**
     * <code>.RemoteReadChildRequest remote_read_child_request = 4;</code>
     * @return The remoteReadChildRequest.
     */
    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest getRemoteReadChildRequest() {
      if (requestCase_ == 4) {
         return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest) request_;
      }
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.getDefaultInstance();
    }
    /**
     * <code>.RemoteReadChildRequest remote_read_child_request = 4;</code>
     */
    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequestOrBuilder getRemoteReadChildRequestOrBuilder() {
      if (requestCase_ == 4) {
         return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest) request_;
      }
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.getDefaultInstance();
    }

    public static final int REMOTE_CHANGES_REQUEST_FIELD_NUMBER = 5;
    /**
     * <code>.RemoteChangesRequest remote_changes_request = 5;</code>
     * @return Whether the remoteChangesRequest field is set.
     */
    @java.lang.Override
    public boolean hasRemoteChangesRequest() {
      return requestCase_ == 5;
    }
    /**
     * <code>.RemoteChangesRequest remote_changes_request = 5;</code>
     * @return The remoteChangesRequest.
     */
    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest getRemoteChangesRequest() {
      if (requestCase_ == 5) {
         return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest) request_;
      }
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.getDefaultInstance();
    }
    /**
     * <code>.RemoteChangesRequest remote_changes_request = 5;</code>
     */
    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequestOrBuilder getRemoteChangesRequestOrBuilder() {
      if (requestCase_ == 5) {
         return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest) request_;
      }
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (requestCase_ == 1) {
        output.writeMessage(1, (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest) request_);
      }
      if (requestCase_ == 2) {
        output.writeMessage(2, (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest) request_);
      }
      if (requestCase_ == 3) {
        output.writeMessage(3, (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest) request_);
      }
      if (requestCase_ == 4) {
        output.writeMessage(4, (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest) request_);
      }
      if (requestCase_ == 5) {
        output.writeMessage(5, (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest) request_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (requestCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest) request_);
      }
      if (requestCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest) request_);
      }
      if (requestCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest) request_);
      }
      if (requestCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest) request_);
      }
      if (requestCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest) request_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.Request)) {
        return super.equals(obj);
      }
      com.limechain.network.substream.lightclient.pb.LightClientMessage.Request other = (com.limechain.network.substream.lightclient.pb.LightClientMessage.Request) obj;

      if (!getRequestCase().equals(other.getRequestCase())) return false;
      switch (requestCase_) {
        case 1:
          if (!getRemoteCallRequest()
              .equals(other.getRemoteCallRequest())) return false;
          break;
        case 2:
          if (!getRemoteReadRequest()
              .equals(other.getRemoteReadRequest())) return false;
          break;
        case 3:
          if (!getRemoteHeaderRequest()
              .equals(other.getRemoteHeaderRequest())) return false;
          break;
        case 4:
          if (!getRemoteReadChildRequest()
              .equals(other.getRemoteReadChildRequest())) return false;
          break;
        case 5:
          if (!getRemoteChangesRequest()
              .equals(other.getRemoteChangesRequest())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (requestCase_) {
        case 1:
          hash = (37 * hash) + REMOTE_CALL_REQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getRemoteCallRequest().hashCode();
          break;
        case 2:
          hash = (37 * hash) + REMOTE_READ_REQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getRemoteReadRequest().hashCode();
          break;
        case 3:
          hash = (37 * hash) + REMOTE_HEADER_REQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getRemoteHeaderRequest().hashCode();
          break;
        case 4:
          hash = (37 * hash) + REMOTE_READ_CHILD_REQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getRemoteReadChildRequest().hashCode();
          break;
        case 5:
          hash = (37 * hash) + REMOTE_CHANGES_REQUEST_FIELD_NUMBER;
          hash = (53 * hash) + getRemoteChangesRequest().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.limechain.network.substream.lightclient.pb.LightClientMessage.Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Enumerate all possible light client request messages.
     * </pre>
     *
     * Protobuf type {@code Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Request)
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_Request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.limechain.network.substream.lightclient.pb.LightClientMessage.Request.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.Request.Builder.class);
      }

      // Construct using com.limechain.network.substream.lightclient.pb.LightClientMessage.Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        requestCase_ = 0;
        request_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_Request_descriptor;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.Request getDefaultInstanceForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.Request.getDefaultInstance();
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.Request build() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.Request buildPartial() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.Request result = new com.limechain.network.substream.lightclient.pb.LightClientMessage.Request(this);
        if (requestCase_ == 1) {
          if (remoteCallRequestBuilder_ == null) {
            result.request_ = request_;
          } else {
            result.request_ = remoteCallRequestBuilder_.build();
          }
        }
        if (requestCase_ == 2) {
          if (remoteReadRequestBuilder_ == null) {
            result.request_ = request_;
          } else {
            result.request_ = remoteReadRequestBuilder_.build();
          }
        }
        if (requestCase_ == 3) {
          if (remoteHeaderRequestBuilder_ == null) {
            result.request_ = request_;
          } else {
            result.request_ = remoteHeaderRequestBuilder_.build();
          }
        }
        if (requestCase_ == 4) {
          if (remoteReadChildRequestBuilder_ == null) {
            result.request_ = request_;
          } else {
            result.request_ = remoteReadChildRequestBuilder_.build();
          }
        }
        if (requestCase_ == 5) {
          if (remoteChangesRequestBuilder_ == null) {
            result.request_ = request_;
          } else {
            result.request_ = remoteChangesRequestBuilder_.build();
          }
        }
        result.requestCase_ = requestCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.Request) {
          return mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.limechain.network.substream.lightclient.pb.LightClientMessage.Request other) {
        if (other == com.limechain.network.substream.lightclient.pb.LightClientMessage.Request.getDefaultInstance()) return this;
        switch (other.getRequestCase()) {
          case REMOTE_CALL_REQUEST: {
            mergeRemoteCallRequest(other.getRemoteCallRequest());
            break;
          }
          case REMOTE_READ_REQUEST: {
            mergeRemoteReadRequest(other.getRemoteReadRequest());
            break;
          }
          case REMOTE_HEADER_REQUEST: {
            mergeRemoteHeaderRequest(other.getRemoteHeaderRequest());
            break;
          }
          case REMOTE_READ_CHILD_REQUEST: {
            mergeRemoteReadChildRequest(other.getRemoteReadChildRequest());
            break;
          }
          case REMOTE_CHANGES_REQUEST: {
            mergeRemoteChangesRequest(other.getRemoteChangesRequest());
            break;
          }
          case REQUEST_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.limechain.network.substream.lightclient.pb.LightClientMessage.Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int requestCase_ = 0;
      private java.lang.Object request_;
      public RequestCase
          getRequestCase() {
        return RequestCase.forNumber(
            requestCase_);
      }

      public Builder clearRequest() {
        requestCase_ = 0;
        request_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequestOrBuilder> remoteCallRequestBuilder_;
      /**
       * <code>.RemoteCallRequest remote_call_request = 1;</code>
       * @return Whether the remoteCallRequest field is set.
       */
      @java.lang.Override
      public boolean hasRemoteCallRequest() {
        return requestCase_ == 1;
      }
      /**
       * <code>.RemoteCallRequest remote_call_request = 1;</code>
       * @return The remoteCallRequest.
       */
      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest getRemoteCallRequest() {
        if (remoteCallRequestBuilder_ == null) {
          if (requestCase_ == 1) {
            return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest) request_;
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 1) {
            return remoteCallRequestBuilder_.getMessage();
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.RemoteCallRequest remote_call_request = 1;</code>
       */
      public Builder setRemoteCallRequest(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest value) {
        if (remoteCallRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          remoteCallRequestBuilder_.setMessage(value);
        }
        requestCase_ = 1;
        return this;
      }
      /**
       * <code>.RemoteCallRequest remote_call_request = 1;</code>
       */
      public Builder setRemoteCallRequest(
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.Builder builderForValue) {
        if (remoteCallRequestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          remoteCallRequestBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 1;
        return this;
      }
      /**
       * <code>.RemoteCallRequest remote_call_request = 1;</code>
       */
      public Builder mergeRemoteCallRequest(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest value) {
        if (remoteCallRequestBuilder_ == null) {
          if (requestCase_ == 1 &&
              request_ != com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.getDefaultInstance()) {
            request_ = com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.newBuilder((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 1) {
            remoteCallRequestBuilder_.mergeFrom(value);
          }
          remoteCallRequestBuilder_.setMessage(value);
        }
        requestCase_ = 1;
        return this;
      }
      /**
       * <code>.RemoteCallRequest remote_call_request = 1;</code>
       */
      public Builder clearRemoteCallRequest() {
        if (remoteCallRequestBuilder_ == null) {
          if (requestCase_ == 1) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 1) {
            requestCase_ = 0;
            request_ = null;
          }
          remoteCallRequestBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.RemoteCallRequest remote_call_request = 1;</code>
       */
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.Builder getRemoteCallRequestBuilder() {
        return getRemoteCallRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>.RemoteCallRequest remote_call_request = 1;</code>
       */
      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequestOrBuilder getRemoteCallRequestOrBuilder() {
        if ((requestCase_ == 1) && (remoteCallRequestBuilder_ != null)) {
          return remoteCallRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 1) {
            return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest) request_;
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.RemoteCallRequest remote_call_request = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequestOrBuilder> 
          getRemoteCallRequestFieldBuilder() {
        if (remoteCallRequestBuilder_ == null) {
          if (!(requestCase_ == 1)) {
            request_ = com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.getDefaultInstance();
          }
          remoteCallRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequestOrBuilder>(
                  (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 1;
        onChanged();;
        return remoteCallRequestBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequestOrBuilder> remoteReadRequestBuilder_;
      /**
       * <code>.RemoteReadRequest remote_read_request = 2;</code>
       * @return Whether the remoteReadRequest field is set.
       */
      @java.lang.Override
      public boolean hasRemoteReadRequest() {
        return requestCase_ == 2;
      }
      /**
       * <code>.RemoteReadRequest remote_read_request = 2;</code>
       * @return The remoteReadRequest.
       */
      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest getRemoteReadRequest() {
        if (remoteReadRequestBuilder_ == null) {
          if (requestCase_ == 2) {
            return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest) request_;
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 2) {
            return remoteReadRequestBuilder_.getMessage();
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.RemoteReadRequest remote_read_request = 2;</code>
       */
      public Builder setRemoteReadRequest(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest value) {
        if (remoteReadRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          remoteReadRequestBuilder_.setMessage(value);
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <code>.RemoteReadRequest remote_read_request = 2;</code>
       */
      public Builder setRemoteReadRequest(
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.Builder builderForValue) {
        if (remoteReadRequestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          remoteReadRequestBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <code>.RemoteReadRequest remote_read_request = 2;</code>
       */
      public Builder mergeRemoteReadRequest(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest value) {
        if (remoteReadRequestBuilder_ == null) {
          if (requestCase_ == 2 &&
              request_ != com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.getDefaultInstance()) {
            request_ = com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.newBuilder((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 2) {
            remoteReadRequestBuilder_.mergeFrom(value);
          }
          remoteReadRequestBuilder_.setMessage(value);
        }
        requestCase_ = 2;
        return this;
      }
      /**
       * <code>.RemoteReadRequest remote_read_request = 2;</code>
       */
      public Builder clearRemoteReadRequest() {
        if (remoteReadRequestBuilder_ == null) {
          if (requestCase_ == 2) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 2) {
            requestCase_ = 0;
            request_ = null;
          }
          remoteReadRequestBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.RemoteReadRequest remote_read_request = 2;</code>
       */
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.Builder getRemoteReadRequestBuilder() {
        return getRemoteReadRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>.RemoteReadRequest remote_read_request = 2;</code>
       */
      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequestOrBuilder getRemoteReadRequestOrBuilder() {
        if ((requestCase_ == 2) && (remoteReadRequestBuilder_ != null)) {
          return remoteReadRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 2) {
            return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest) request_;
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.RemoteReadRequest remote_read_request = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequestOrBuilder> 
          getRemoteReadRequestFieldBuilder() {
        if (remoteReadRequestBuilder_ == null) {
          if (!(requestCase_ == 2)) {
            request_ = com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.getDefaultInstance();
          }
          remoteReadRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequestOrBuilder>(
                  (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 2;
        onChanged();;
        return remoteReadRequestBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequestOrBuilder> remoteHeaderRequestBuilder_;
      /**
       * <code>.RemoteHeaderRequest remote_header_request = 3;</code>
       * @return Whether the remoteHeaderRequest field is set.
       */
      @java.lang.Override
      public boolean hasRemoteHeaderRequest() {
        return requestCase_ == 3;
      }
      /**
       * <code>.RemoteHeaderRequest remote_header_request = 3;</code>
       * @return The remoteHeaderRequest.
       */
      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest getRemoteHeaderRequest() {
        if (remoteHeaderRequestBuilder_ == null) {
          if (requestCase_ == 3) {
            return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest) request_;
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 3) {
            return remoteHeaderRequestBuilder_.getMessage();
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.RemoteHeaderRequest remote_header_request = 3;</code>
       */
      public Builder setRemoteHeaderRequest(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest value) {
        if (remoteHeaderRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          remoteHeaderRequestBuilder_.setMessage(value);
        }
        requestCase_ = 3;
        return this;
      }
      /**
       * <code>.RemoteHeaderRequest remote_header_request = 3;</code>
       */
      public Builder setRemoteHeaderRequest(
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.Builder builderForValue) {
        if (remoteHeaderRequestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          remoteHeaderRequestBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 3;
        return this;
      }
      /**
       * <code>.RemoteHeaderRequest remote_header_request = 3;</code>
       */
      public Builder mergeRemoteHeaderRequest(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest value) {
        if (remoteHeaderRequestBuilder_ == null) {
          if (requestCase_ == 3 &&
              request_ != com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.getDefaultInstance()) {
            request_ = com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.newBuilder((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 3) {
            remoteHeaderRequestBuilder_.mergeFrom(value);
          }
          remoteHeaderRequestBuilder_.setMessage(value);
        }
        requestCase_ = 3;
        return this;
      }
      /**
       * <code>.RemoteHeaderRequest remote_header_request = 3;</code>
       */
      public Builder clearRemoteHeaderRequest() {
        if (remoteHeaderRequestBuilder_ == null) {
          if (requestCase_ == 3) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 3) {
            requestCase_ = 0;
            request_ = null;
          }
          remoteHeaderRequestBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.RemoteHeaderRequest remote_header_request = 3;</code>
       */
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.Builder getRemoteHeaderRequestBuilder() {
        return getRemoteHeaderRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>.RemoteHeaderRequest remote_header_request = 3;</code>
       */
      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequestOrBuilder getRemoteHeaderRequestOrBuilder() {
        if ((requestCase_ == 3) && (remoteHeaderRequestBuilder_ != null)) {
          return remoteHeaderRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 3) {
            return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest) request_;
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.RemoteHeaderRequest remote_header_request = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequestOrBuilder> 
          getRemoteHeaderRequestFieldBuilder() {
        if (remoteHeaderRequestBuilder_ == null) {
          if (!(requestCase_ == 3)) {
            request_ = com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.getDefaultInstance();
          }
          remoteHeaderRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequestOrBuilder>(
                  (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 3;
        onChanged();;
        return remoteHeaderRequestBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequestOrBuilder> remoteReadChildRequestBuilder_;
      /**
       * <code>.RemoteReadChildRequest remote_read_child_request = 4;</code>
       * @return Whether the remoteReadChildRequest field is set.
       */
      @java.lang.Override
      public boolean hasRemoteReadChildRequest() {
        return requestCase_ == 4;
      }
      /**
       * <code>.RemoteReadChildRequest remote_read_child_request = 4;</code>
       * @return The remoteReadChildRequest.
       */
      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest getRemoteReadChildRequest() {
        if (remoteReadChildRequestBuilder_ == null) {
          if (requestCase_ == 4) {
            return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest) request_;
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 4) {
            return remoteReadChildRequestBuilder_.getMessage();
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.RemoteReadChildRequest remote_read_child_request = 4;</code>
       */
      public Builder setRemoteReadChildRequest(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest value) {
        if (remoteReadChildRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          remoteReadChildRequestBuilder_.setMessage(value);
        }
        requestCase_ = 4;
        return this;
      }
      /**
       * <code>.RemoteReadChildRequest remote_read_child_request = 4;</code>
       */
      public Builder setRemoteReadChildRequest(
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.Builder builderForValue) {
        if (remoteReadChildRequestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          remoteReadChildRequestBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 4;
        return this;
      }
      /**
       * <code>.RemoteReadChildRequest remote_read_child_request = 4;</code>
       */
      public Builder mergeRemoteReadChildRequest(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest value) {
        if (remoteReadChildRequestBuilder_ == null) {
          if (requestCase_ == 4 &&
              request_ != com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.getDefaultInstance()) {
            request_ = com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.newBuilder((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 4) {
            remoteReadChildRequestBuilder_.mergeFrom(value);
          }
          remoteReadChildRequestBuilder_.setMessage(value);
        }
        requestCase_ = 4;
        return this;
      }
      /**
       * <code>.RemoteReadChildRequest remote_read_child_request = 4;</code>
       */
      public Builder clearRemoteReadChildRequest() {
        if (remoteReadChildRequestBuilder_ == null) {
          if (requestCase_ == 4) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 4) {
            requestCase_ = 0;
            request_ = null;
          }
          remoteReadChildRequestBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.RemoteReadChildRequest remote_read_child_request = 4;</code>
       */
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.Builder getRemoteReadChildRequestBuilder() {
        return getRemoteReadChildRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>.RemoteReadChildRequest remote_read_child_request = 4;</code>
       */
      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequestOrBuilder getRemoteReadChildRequestOrBuilder() {
        if ((requestCase_ == 4) && (remoteReadChildRequestBuilder_ != null)) {
          return remoteReadChildRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 4) {
            return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest) request_;
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.RemoteReadChildRequest remote_read_child_request = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequestOrBuilder> 
          getRemoteReadChildRequestFieldBuilder() {
        if (remoteReadChildRequestBuilder_ == null) {
          if (!(requestCase_ == 4)) {
            request_ = com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.getDefaultInstance();
          }
          remoteReadChildRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequestOrBuilder>(
                  (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 4;
        onChanged();;
        return remoteReadChildRequestBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequestOrBuilder> remoteChangesRequestBuilder_;
      /**
       * <code>.RemoteChangesRequest remote_changes_request = 5;</code>
       * @return Whether the remoteChangesRequest field is set.
       */
      @java.lang.Override
      public boolean hasRemoteChangesRequest() {
        return requestCase_ == 5;
      }
      /**
       * <code>.RemoteChangesRequest remote_changes_request = 5;</code>
       * @return The remoteChangesRequest.
       */
      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest getRemoteChangesRequest() {
        if (remoteChangesRequestBuilder_ == null) {
          if (requestCase_ == 5) {
            return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest) request_;
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.getDefaultInstance();
        } else {
          if (requestCase_ == 5) {
            return remoteChangesRequestBuilder_.getMessage();
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.RemoteChangesRequest remote_changes_request = 5;</code>
       */
      public Builder setRemoteChangesRequest(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest value) {
        if (remoteChangesRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          remoteChangesRequestBuilder_.setMessage(value);
        }
        requestCase_ = 5;
        return this;
      }
      /**
       * <code>.RemoteChangesRequest remote_changes_request = 5;</code>
       */
      public Builder setRemoteChangesRequest(
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.Builder builderForValue) {
        if (remoteChangesRequestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          remoteChangesRequestBuilder_.setMessage(builderForValue.build());
        }
        requestCase_ = 5;
        return this;
      }
      /**
       * <code>.RemoteChangesRequest remote_changes_request = 5;</code>
       */
      public Builder mergeRemoteChangesRequest(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest value) {
        if (remoteChangesRequestBuilder_ == null) {
          if (requestCase_ == 5 &&
              request_ != com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.getDefaultInstance()) {
            request_ = com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.newBuilder((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest) request_)
                .mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          if (requestCase_ == 5) {
            remoteChangesRequestBuilder_.mergeFrom(value);
          }
          remoteChangesRequestBuilder_.setMessage(value);
        }
        requestCase_ = 5;
        return this;
      }
      /**
       * <code>.RemoteChangesRequest remote_changes_request = 5;</code>
       */
      public Builder clearRemoteChangesRequest() {
        if (remoteChangesRequestBuilder_ == null) {
          if (requestCase_ == 5) {
            requestCase_ = 0;
            request_ = null;
            onChanged();
          }
        } else {
          if (requestCase_ == 5) {
            requestCase_ = 0;
            request_ = null;
          }
          remoteChangesRequestBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.RemoteChangesRequest remote_changes_request = 5;</code>
       */
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.Builder getRemoteChangesRequestBuilder() {
        return getRemoteChangesRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>.RemoteChangesRequest remote_changes_request = 5;</code>
       */
      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequestOrBuilder getRemoteChangesRequestOrBuilder() {
        if ((requestCase_ == 5) && (remoteChangesRequestBuilder_ != null)) {
          return remoteChangesRequestBuilder_.getMessageOrBuilder();
        } else {
          if (requestCase_ == 5) {
            return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest) request_;
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.RemoteChangesRequest remote_changes_request = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequestOrBuilder> 
          getRemoteChangesRequestFieldBuilder() {
        if (remoteChangesRequestBuilder_ == null) {
          if (!(requestCase_ == 5)) {
            request_ = com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.getDefaultInstance();
          }
          remoteChangesRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequestOrBuilder>(
                  (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest) request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        requestCase_ = 5;
        onChanged();;
        return remoteChangesRequestBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Request)
    }

    // @@protoc_insertion_point(class_scope:Request)
    private static final com.limechain.network.substream.lightclient.pb.LightClientMessage.Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.limechain.network.substream.lightclient.pb.LightClientMessage.Request();
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Request>
        PARSER = new com.google.protobuf.AbstractParser<Request>() {
      @java.lang.Override
      public Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.RemoteCallResponse remote_call_response = 1;</code>
     * @return Whether the remoteCallResponse field is set.
     */
    boolean hasRemoteCallResponse();
    /**
     * <code>.RemoteCallResponse remote_call_response = 1;</code>
     * @return The remoteCallResponse.
     */
    com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse getRemoteCallResponse();
    /**
     * <code>.RemoteCallResponse remote_call_response = 1;</code>
     */
    com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponseOrBuilder getRemoteCallResponseOrBuilder();

    /**
     * <code>.RemoteReadResponse remote_read_response = 2;</code>
     * @return Whether the remoteReadResponse field is set.
     */
    boolean hasRemoteReadResponse();
    /**
     * <code>.RemoteReadResponse remote_read_response = 2;</code>
     * @return The remoteReadResponse.
     */
    com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse getRemoteReadResponse();
    /**
     * <code>.RemoteReadResponse remote_read_response = 2;</code>
     */
    com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponseOrBuilder getRemoteReadResponseOrBuilder();

    /**
     * <code>.RemoteHeaderResponse remote_header_response = 3;</code>
     * @return Whether the remoteHeaderResponse field is set.
     */
    boolean hasRemoteHeaderResponse();
    /**
     * <code>.RemoteHeaderResponse remote_header_response = 3;</code>
     * @return The remoteHeaderResponse.
     */
    com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse getRemoteHeaderResponse();
    /**
     * <code>.RemoteHeaderResponse remote_header_response = 3;</code>
     */
    com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponseOrBuilder getRemoteHeaderResponseOrBuilder();

    /**
     * <code>.RemoteChangesResponse remote_changes_response = 4;</code>
     * @return Whether the remoteChangesResponse field is set.
     */
    boolean hasRemoteChangesResponse();
    /**
     * <code>.RemoteChangesResponse remote_changes_response = 4;</code>
     * @return The remoteChangesResponse.
     */
    com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse getRemoteChangesResponse();
    /**
     * <code>.RemoteChangesResponse remote_changes_response = 4;</code>
     */
    com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponseOrBuilder getRemoteChangesResponseOrBuilder();

    public com.limechain.network.substream.lightclient.pb.LightClientMessage.Response.ResponseCase getResponseCase();
  }
  /**
   * <pre>
   * Enumerate all possible light client response messages.
   * </pre>
   *
   * Protobuf type {@code Response}
   */
  public static final class Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Response)
      ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Response() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Response();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.Builder subBuilder = null;
              if (responseCase_ == 1) {
                subBuilder = ((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse) response_).toBuilder();
              }
              response_ =
                  input.readMessage(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse) response_);
                response_ = subBuilder.buildPartial();
              }
              responseCase_ = 1;
              break;
            }
            case 18: {
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.Builder subBuilder = null;
              if (responseCase_ == 2) {
                subBuilder = ((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse) response_).toBuilder();
              }
              response_ =
                  input.readMessage(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse) response_);
                response_ = subBuilder.buildPartial();
              }
              responseCase_ = 2;
              break;
            }
            case 26: {
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.Builder subBuilder = null;
              if (responseCase_ == 3) {
                subBuilder = ((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse) response_).toBuilder();
              }
              response_ =
                  input.readMessage(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse) response_);
                response_ = subBuilder.buildPartial();
              }
              responseCase_ = 3;
              break;
            }
            case 34: {
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.Builder subBuilder = null;
              if (responseCase_ == 4) {
                subBuilder = ((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse) response_).toBuilder();
              }
              response_ =
                  input.readMessage(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse) response_);
                response_ = subBuilder.buildPartial();
              }
              responseCase_ = 4;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_Response_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.limechain.network.substream.lightclient.pb.LightClientMessage.Response.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.Response.Builder.class);
    }

    private int responseCase_ = 0;
    private java.lang.Object response_;
    public enum ResponseCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      REMOTE_CALL_RESPONSE(1),
      REMOTE_READ_RESPONSE(2),
      REMOTE_HEADER_RESPONSE(3),
      REMOTE_CHANGES_RESPONSE(4),
      RESPONSE_NOT_SET(0);
      private final int value;
      private ResponseCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ResponseCase valueOf(int value) {
        return forNumber(value);
      }

      public static ResponseCase forNumber(int value) {
        switch (value) {
          case 1: return REMOTE_CALL_RESPONSE;
          case 2: return REMOTE_READ_RESPONSE;
          case 3: return REMOTE_HEADER_RESPONSE;
          case 4: return REMOTE_CHANGES_RESPONSE;
          case 0: return RESPONSE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ResponseCase
    getResponseCase() {
      return ResponseCase.forNumber(
          responseCase_);
    }

    public static final int REMOTE_CALL_RESPONSE_FIELD_NUMBER = 1;
    /**
     * <code>.RemoteCallResponse remote_call_response = 1;</code>
     * @return Whether the remoteCallResponse field is set.
     */
    @java.lang.Override
    public boolean hasRemoteCallResponse() {
      return responseCase_ == 1;
    }
    /**
     * <code>.RemoteCallResponse remote_call_response = 1;</code>
     * @return The remoteCallResponse.
     */
    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse getRemoteCallResponse() {
      if (responseCase_ == 1) {
         return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse) response_;
      }
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.getDefaultInstance();
    }
    /**
     * <code>.RemoteCallResponse remote_call_response = 1;</code>
     */
    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponseOrBuilder getRemoteCallResponseOrBuilder() {
      if (responseCase_ == 1) {
         return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse) response_;
      }
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.getDefaultInstance();
    }

    public static final int REMOTE_READ_RESPONSE_FIELD_NUMBER = 2;
    /**
     * <code>.RemoteReadResponse remote_read_response = 2;</code>
     * @return Whether the remoteReadResponse field is set.
     */
    @java.lang.Override
    public boolean hasRemoteReadResponse() {
      return responseCase_ == 2;
    }
    /**
     * <code>.RemoteReadResponse remote_read_response = 2;</code>
     * @return The remoteReadResponse.
     */
    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse getRemoteReadResponse() {
      if (responseCase_ == 2) {
         return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse) response_;
      }
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.getDefaultInstance();
    }
    /**
     * <code>.RemoteReadResponse remote_read_response = 2;</code>
     */
    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponseOrBuilder getRemoteReadResponseOrBuilder() {
      if (responseCase_ == 2) {
         return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse) response_;
      }
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.getDefaultInstance();
    }

    public static final int REMOTE_HEADER_RESPONSE_FIELD_NUMBER = 3;
    /**
     * <code>.RemoteHeaderResponse remote_header_response = 3;</code>
     * @return Whether the remoteHeaderResponse field is set.
     */
    @java.lang.Override
    public boolean hasRemoteHeaderResponse() {
      return responseCase_ == 3;
    }
    /**
     * <code>.RemoteHeaderResponse remote_header_response = 3;</code>
     * @return The remoteHeaderResponse.
     */
    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse getRemoteHeaderResponse() {
      if (responseCase_ == 3) {
         return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse) response_;
      }
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.getDefaultInstance();
    }
    /**
     * <code>.RemoteHeaderResponse remote_header_response = 3;</code>
     */
    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponseOrBuilder getRemoteHeaderResponseOrBuilder() {
      if (responseCase_ == 3) {
         return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse) response_;
      }
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.getDefaultInstance();
    }

    public static final int REMOTE_CHANGES_RESPONSE_FIELD_NUMBER = 4;
    /**
     * <code>.RemoteChangesResponse remote_changes_response = 4;</code>
     * @return Whether the remoteChangesResponse field is set.
     */
    @java.lang.Override
    public boolean hasRemoteChangesResponse() {
      return responseCase_ == 4;
    }
    /**
     * <code>.RemoteChangesResponse remote_changes_response = 4;</code>
     * @return The remoteChangesResponse.
     */
    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse getRemoteChangesResponse() {
      if (responseCase_ == 4) {
         return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse) response_;
      }
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.getDefaultInstance();
    }
    /**
     * <code>.RemoteChangesResponse remote_changes_response = 4;</code>
     */
    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponseOrBuilder getRemoteChangesResponseOrBuilder() {
      if (responseCase_ == 4) {
         return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse) response_;
      }
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (responseCase_ == 1) {
        output.writeMessage(1, (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse) response_);
      }
      if (responseCase_ == 2) {
        output.writeMessage(2, (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse) response_);
      }
      if (responseCase_ == 3) {
        output.writeMessage(3, (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse) response_);
      }
      if (responseCase_ == 4) {
        output.writeMessage(4, (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse) response_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (responseCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse) response_);
      }
      if (responseCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse) response_);
      }
      if (responseCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse) response_);
      }
      if (responseCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse) response_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.Response)) {
        return super.equals(obj);
      }
      com.limechain.network.substream.lightclient.pb.LightClientMessage.Response other = (com.limechain.network.substream.lightclient.pb.LightClientMessage.Response) obj;

      if (!getResponseCase().equals(other.getResponseCase())) return false;
      switch (responseCase_) {
        case 1:
          if (!getRemoteCallResponse()
              .equals(other.getRemoteCallResponse())) return false;
          break;
        case 2:
          if (!getRemoteReadResponse()
              .equals(other.getRemoteReadResponse())) return false;
          break;
        case 3:
          if (!getRemoteHeaderResponse()
              .equals(other.getRemoteHeaderResponse())) return false;
          break;
        case 4:
          if (!getRemoteChangesResponse()
              .equals(other.getRemoteChangesResponse())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (responseCase_) {
        case 1:
          hash = (37 * hash) + REMOTE_CALL_RESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getRemoteCallResponse().hashCode();
          break;
        case 2:
          hash = (37 * hash) + REMOTE_READ_RESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getRemoteReadResponse().hashCode();
          break;
        case 3:
          hash = (37 * hash) + REMOTE_HEADER_RESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getRemoteHeaderResponse().hashCode();
          break;
        case 4:
          hash = (37 * hash) + REMOTE_CHANGES_RESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getRemoteChangesResponse().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.limechain.network.substream.lightclient.pb.LightClientMessage.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Enumerate all possible light client response messages.
     * </pre>
     *
     * Protobuf type {@code Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Response)
        com.limechain.network.substream.lightclient.pb.LightClientMessage.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_Response_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.limechain.network.substream.lightclient.pb.LightClientMessage.Response.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.Response.Builder.class);
      }

      // Construct using com.limechain.network.substream.lightclient.pb.LightClientMessage.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        responseCase_ = 0;
        response_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_Response_descriptor;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.Response getDefaultInstanceForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.Response.getDefaultInstance();
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.Response build() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.Response buildPartial() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.Response result = new com.limechain.network.substream.lightclient.pb.LightClientMessage.Response(this);
        if (responseCase_ == 1) {
          if (remoteCallResponseBuilder_ == null) {
            result.response_ = response_;
          } else {
            result.response_ = remoteCallResponseBuilder_.build();
          }
        }
        if (responseCase_ == 2) {
          if (remoteReadResponseBuilder_ == null) {
            result.response_ = response_;
          } else {
            result.response_ = remoteReadResponseBuilder_.build();
          }
        }
        if (responseCase_ == 3) {
          if (remoteHeaderResponseBuilder_ == null) {
            result.response_ = response_;
          } else {
            result.response_ = remoteHeaderResponseBuilder_.build();
          }
        }
        if (responseCase_ == 4) {
          if (remoteChangesResponseBuilder_ == null) {
            result.response_ = response_;
          } else {
            result.response_ = remoteChangesResponseBuilder_.build();
          }
        }
        result.responseCase_ = responseCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.Response) {
          return mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.limechain.network.substream.lightclient.pb.LightClientMessage.Response other) {
        if (other == com.limechain.network.substream.lightclient.pb.LightClientMessage.Response.getDefaultInstance()) return this;
        switch (other.getResponseCase()) {
          case REMOTE_CALL_RESPONSE: {
            mergeRemoteCallResponse(other.getRemoteCallResponse());
            break;
          }
          case REMOTE_READ_RESPONSE: {
            mergeRemoteReadResponse(other.getRemoteReadResponse());
            break;
          }
          case REMOTE_HEADER_RESPONSE: {
            mergeRemoteHeaderResponse(other.getRemoteHeaderResponse());
            break;
          }
          case REMOTE_CHANGES_RESPONSE: {
            mergeRemoteChangesResponse(other.getRemoteChangesResponse());
            break;
          }
          case RESPONSE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.limechain.network.substream.lightclient.pb.LightClientMessage.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int responseCase_ = 0;
      private java.lang.Object response_;
      public ResponseCase
          getResponseCase() {
        return ResponseCase.forNumber(
            responseCase_);
      }

      public Builder clearResponse() {
        responseCase_ = 0;
        response_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponseOrBuilder> remoteCallResponseBuilder_;
      /**
       * <code>.RemoteCallResponse remote_call_response = 1;</code>
       * @return Whether the remoteCallResponse field is set.
       */
      @java.lang.Override
      public boolean hasRemoteCallResponse() {
        return responseCase_ == 1;
      }
      /**
       * <code>.RemoteCallResponse remote_call_response = 1;</code>
       * @return The remoteCallResponse.
       */
      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse getRemoteCallResponse() {
        if (remoteCallResponseBuilder_ == null) {
          if (responseCase_ == 1) {
            return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse) response_;
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.getDefaultInstance();
        } else {
          if (responseCase_ == 1) {
            return remoteCallResponseBuilder_.getMessage();
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.RemoteCallResponse remote_call_response = 1;</code>
       */
      public Builder setRemoteCallResponse(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse value) {
        if (remoteCallResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          remoteCallResponseBuilder_.setMessage(value);
        }
        responseCase_ = 1;
        return this;
      }
      /**
       * <code>.RemoteCallResponse remote_call_response = 1;</code>
       */
      public Builder setRemoteCallResponse(
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.Builder builderForValue) {
        if (remoteCallResponseBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          remoteCallResponseBuilder_.setMessage(builderForValue.build());
        }
        responseCase_ = 1;
        return this;
      }
      /**
       * <code>.RemoteCallResponse remote_call_response = 1;</code>
       */
      public Builder mergeRemoteCallResponse(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse value) {
        if (remoteCallResponseBuilder_ == null) {
          if (responseCase_ == 1 &&
              response_ != com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.getDefaultInstance()) {
            response_ = com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.newBuilder((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse) response_)
                .mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          if (responseCase_ == 1) {
            remoteCallResponseBuilder_.mergeFrom(value);
          }
          remoteCallResponseBuilder_.setMessage(value);
        }
        responseCase_ = 1;
        return this;
      }
      /**
       * <code>.RemoteCallResponse remote_call_response = 1;</code>
       */
      public Builder clearRemoteCallResponse() {
        if (remoteCallResponseBuilder_ == null) {
          if (responseCase_ == 1) {
            responseCase_ = 0;
            response_ = null;
            onChanged();
          }
        } else {
          if (responseCase_ == 1) {
            responseCase_ = 0;
            response_ = null;
          }
          remoteCallResponseBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.RemoteCallResponse remote_call_response = 1;</code>
       */
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.Builder getRemoteCallResponseBuilder() {
        return getRemoteCallResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>.RemoteCallResponse remote_call_response = 1;</code>
       */
      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponseOrBuilder getRemoteCallResponseOrBuilder() {
        if ((responseCase_ == 1) && (remoteCallResponseBuilder_ != null)) {
          return remoteCallResponseBuilder_.getMessageOrBuilder();
        } else {
          if (responseCase_ == 1) {
            return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse) response_;
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.RemoteCallResponse remote_call_response = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponseOrBuilder> 
          getRemoteCallResponseFieldBuilder() {
        if (remoteCallResponseBuilder_ == null) {
          if (!(responseCase_ == 1)) {
            response_ = com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.getDefaultInstance();
          }
          remoteCallResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponseOrBuilder>(
                  (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse) response_,
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        responseCase_ = 1;
        onChanged();;
        return remoteCallResponseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponseOrBuilder> remoteReadResponseBuilder_;
      /**
       * <code>.RemoteReadResponse remote_read_response = 2;</code>
       * @return Whether the remoteReadResponse field is set.
       */
      @java.lang.Override
      public boolean hasRemoteReadResponse() {
        return responseCase_ == 2;
      }
      /**
       * <code>.RemoteReadResponse remote_read_response = 2;</code>
       * @return The remoteReadResponse.
       */
      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse getRemoteReadResponse() {
        if (remoteReadResponseBuilder_ == null) {
          if (responseCase_ == 2) {
            return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse) response_;
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.getDefaultInstance();
        } else {
          if (responseCase_ == 2) {
            return remoteReadResponseBuilder_.getMessage();
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.RemoteReadResponse remote_read_response = 2;</code>
       */
      public Builder setRemoteReadResponse(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse value) {
        if (remoteReadResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          remoteReadResponseBuilder_.setMessage(value);
        }
        responseCase_ = 2;
        return this;
      }
      /**
       * <code>.RemoteReadResponse remote_read_response = 2;</code>
       */
      public Builder setRemoteReadResponse(
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.Builder builderForValue) {
        if (remoteReadResponseBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          remoteReadResponseBuilder_.setMessage(builderForValue.build());
        }
        responseCase_ = 2;
        return this;
      }
      /**
       * <code>.RemoteReadResponse remote_read_response = 2;</code>
       */
      public Builder mergeRemoteReadResponse(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse value) {
        if (remoteReadResponseBuilder_ == null) {
          if (responseCase_ == 2 &&
              response_ != com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.getDefaultInstance()) {
            response_ = com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.newBuilder((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse) response_)
                .mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          if (responseCase_ == 2) {
            remoteReadResponseBuilder_.mergeFrom(value);
          }
          remoteReadResponseBuilder_.setMessage(value);
        }
        responseCase_ = 2;
        return this;
      }
      /**
       * <code>.RemoteReadResponse remote_read_response = 2;</code>
       */
      public Builder clearRemoteReadResponse() {
        if (remoteReadResponseBuilder_ == null) {
          if (responseCase_ == 2) {
            responseCase_ = 0;
            response_ = null;
            onChanged();
          }
        } else {
          if (responseCase_ == 2) {
            responseCase_ = 0;
            response_ = null;
          }
          remoteReadResponseBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.RemoteReadResponse remote_read_response = 2;</code>
       */
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.Builder getRemoteReadResponseBuilder() {
        return getRemoteReadResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>.RemoteReadResponse remote_read_response = 2;</code>
       */
      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponseOrBuilder getRemoteReadResponseOrBuilder() {
        if ((responseCase_ == 2) && (remoteReadResponseBuilder_ != null)) {
          return remoteReadResponseBuilder_.getMessageOrBuilder();
        } else {
          if (responseCase_ == 2) {
            return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse) response_;
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.RemoteReadResponse remote_read_response = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponseOrBuilder> 
          getRemoteReadResponseFieldBuilder() {
        if (remoteReadResponseBuilder_ == null) {
          if (!(responseCase_ == 2)) {
            response_ = com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.getDefaultInstance();
          }
          remoteReadResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponseOrBuilder>(
                  (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse) response_,
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        responseCase_ = 2;
        onChanged();;
        return remoteReadResponseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponseOrBuilder> remoteHeaderResponseBuilder_;
      /**
       * <code>.RemoteHeaderResponse remote_header_response = 3;</code>
       * @return Whether the remoteHeaderResponse field is set.
       */
      @java.lang.Override
      public boolean hasRemoteHeaderResponse() {
        return responseCase_ == 3;
      }
      /**
       * <code>.RemoteHeaderResponse remote_header_response = 3;</code>
       * @return The remoteHeaderResponse.
       */
      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse getRemoteHeaderResponse() {
        if (remoteHeaderResponseBuilder_ == null) {
          if (responseCase_ == 3) {
            return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse) response_;
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.getDefaultInstance();
        } else {
          if (responseCase_ == 3) {
            return remoteHeaderResponseBuilder_.getMessage();
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.RemoteHeaderResponse remote_header_response = 3;</code>
       */
      public Builder setRemoteHeaderResponse(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse value) {
        if (remoteHeaderResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          remoteHeaderResponseBuilder_.setMessage(value);
        }
        responseCase_ = 3;
        return this;
      }
      /**
       * <code>.RemoteHeaderResponse remote_header_response = 3;</code>
       */
      public Builder setRemoteHeaderResponse(
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.Builder builderForValue) {
        if (remoteHeaderResponseBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          remoteHeaderResponseBuilder_.setMessage(builderForValue.build());
        }
        responseCase_ = 3;
        return this;
      }
      /**
       * <code>.RemoteHeaderResponse remote_header_response = 3;</code>
       */
      public Builder mergeRemoteHeaderResponse(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse value) {
        if (remoteHeaderResponseBuilder_ == null) {
          if (responseCase_ == 3 &&
              response_ != com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.getDefaultInstance()) {
            response_ = com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.newBuilder((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse) response_)
                .mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          if (responseCase_ == 3) {
            remoteHeaderResponseBuilder_.mergeFrom(value);
          }
          remoteHeaderResponseBuilder_.setMessage(value);
        }
        responseCase_ = 3;
        return this;
      }
      /**
       * <code>.RemoteHeaderResponse remote_header_response = 3;</code>
       */
      public Builder clearRemoteHeaderResponse() {
        if (remoteHeaderResponseBuilder_ == null) {
          if (responseCase_ == 3) {
            responseCase_ = 0;
            response_ = null;
            onChanged();
          }
        } else {
          if (responseCase_ == 3) {
            responseCase_ = 0;
            response_ = null;
          }
          remoteHeaderResponseBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.RemoteHeaderResponse remote_header_response = 3;</code>
       */
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.Builder getRemoteHeaderResponseBuilder() {
        return getRemoteHeaderResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>.RemoteHeaderResponse remote_header_response = 3;</code>
       */
      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponseOrBuilder getRemoteHeaderResponseOrBuilder() {
        if ((responseCase_ == 3) && (remoteHeaderResponseBuilder_ != null)) {
          return remoteHeaderResponseBuilder_.getMessageOrBuilder();
        } else {
          if (responseCase_ == 3) {
            return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse) response_;
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.RemoteHeaderResponse remote_header_response = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponseOrBuilder> 
          getRemoteHeaderResponseFieldBuilder() {
        if (remoteHeaderResponseBuilder_ == null) {
          if (!(responseCase_ == 3)) {
            response_ = com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.getDefaultInstance();
          }
          remoteHeaderResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponseOrBuilder>(
                  (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse) response_,
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        responseCase_ = 3;
        onChanged();;
        return remoteHeaderResponseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponseOrBuilder> remoteChangesResponseBuilder_;
      /**
       * <code>.RemoteChangesResponse remote_changes_response = 4;</code>
       * @return Whether the remoteChangesResponse field is set.
       */
      @java.lang.Override
      public boolean hasRemoteChangesResponse() {
        return responseCase_ == 4;
      }
      /**
       * <code>.RemoteChangesResponse remote_changes_response = 4;</code>
       * @return The remoteChangesResponse.
       */
      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse getRemoteChangesResponse() {
        if (remoteChangesResponseBuilder_ == null) {
          if (responseCase_ == 4) {
            return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse) response_;
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.getDefaultInstance();
        } else {
          if (responseCase_ == 4) {
            return remoteChangesResponseBuilder_.getMessage();
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.RemoteChangesResponse remote_changes_response = 4;</code>
       */
      public Builder setRemoteChangesResponse(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse value) {
        if (remoteChangesResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          remoteChangesResponseBuilder_.setMessage(value);
        }
        responseCase_ = 4;
        return this;
      }
      /**
       * <code>.RemoteChangesResponse remote_changes_response = 4;</code>
       */
      public Builder setRemoteChangesResponse(
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.Builder builderForValue) {
        if (remoteChangesResponseBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          remoteChangesResponseBuilder_.setMessage(builderForValue.build());
        }
        responseCase_ = 4;
        return this;
      }
      /**
       * <code>.RemoteChangesResponse remote_changes_response = 4;</code>
       */
      public Builder mergeRemoteChangesResponse(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse value) {
        if (remoteChangesResponseBuilder_ == null) {
          if (responseCase_ == 4 &&
              response_ != com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.getDefaultInstance()) {
            response_ = com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.newBuilder((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse) response_)
                .mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          if (responseCase_ == 4) {
            remoteChangesResponseBuilder_.mergeFrom(value);
          }
          remoteChangesResponseBuilder_.setMessage(value);
        }
        responseCase_ = 4;
        return this;
      }
      /**
       * <code>.RemoteChangesResponse remote_changes_response = 4;</code>
       */
      public Builder clearRemoteChangesResponse() {
        if (remoteChangesResponseBuilder_ == null) {
          if (responseCase_ == 4) {
            responseCase_ = 0;
            response_ = null;
            onChanged();
          }
        } else {
          if (responseCase_ == 4) {
            responseCase_ = 0;
            response_ = null;
          }
          remoteChangesResponseBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.RemoteChangesResponse remote_changes_response = 4;</code>
       */
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.Builder getRemoteChangesResponseBuilder() {
        return getRemoteChangesResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>.RemoteChangesResponse remote_changes_response = 4;</code>
       */
      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponseOrBuilder getRemoteChangesResponseOrBuilder() {
        if ((responseCase_ == 4) && (remoteChangesResponseBuilder_ != null)) {
          return remoteChangesResponseBuilder_.getMessageOrBuilder();
        } else {
          if (responseCase_ == 4) {
            return (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse) response_;
          }
          return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.RemoteChangesResponse remote_changes_response = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponseOrBuilder> 
          getRemoteChangesResponseFieldBuilder() {
        if (remoteChangesResponseBuilder_ == null) {
          if (!(responseCase_ == 4)) {
            response_ = com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.getDefaultInstance();
          }
          remoteChangesResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponseOrBuilder>(
                  (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse) response_,
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        responseCase_ = 4;
        onChanged();;
        return remoteChangesResponseBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Response)
    }

    // @@protoc_insertion_point(class_scope:Response)
    private static final com.limechain.network.substream.lightclient.pb.LightClientMessage.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.limechain.network.substream.lightclient.pb.LightClientMessage.Response();
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      @java.lang.Override
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RemoteCallRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RemoteCallRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Block at which to perform call.
     * </pre>
     *
     * <code>bytes block = 2;</code>
     * @return The block.
     */
    com.google.protobuf.ByteString getBlock();

    /**
     * <pre>
     * Method name.
     * </pre>
     *
     * <code>string method = 3;</code>
     * @return The method.
     */
    java.lang.String getMethod();
    /**
     * <pre>
     * Method name.
     * </pre>
     *
     * <code>string method = 3;</code>
     * @return The bytes for method.
     */
    com.google.protobuf.ByteString
        getMethodBytes();

    /**
     * <pre>
     * Call data.
     * </pre>
     *
     * <code>bytes data = 4;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * Remote call request.
   * </pre>
   *
   * Protobuf type {@code RemoteCallRequest}
   */
  public static final class RemoteCallRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RemoteCallRequest)
      RemoteCallRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RemoteCallRequest.newBuilder() to construct.
    private RemoteCallRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RemoteCallRequest() {
      block_ = com.google.protobuf.ByteString.EMPTY;
      method_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RemoteCallRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RemoteCallRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {

              block_ = input.readBytes();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              method_ = s;
              break;
            }
            case 34: {

              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteCallRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteCallRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.Builder.class);
    }

    public static final int BLOCK_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString block_;
    /**
     * <pre>
     * Block at which to perform call.
     * </pre>
     *
     * <code>bytes block = 2;</code>
     * @return The block.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBlock() {
      return block_;
    }

    public static final int METHOD_FIELD_NUMBER = 3;
    private volatile java.lang.Object method_;
    /**
     * <pre>
     * Method name.
     * </pre>
     *
     * <code>string method = 3;</code>
     * @return The method.
     */
    @java.lang.Override
    public java.lang.String getMethod() {
      java.lang.Object ref = method_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        method_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Method name.
     * </pre>
     *
     * <code>string method = 3;</code>
     * @return The bytes for method.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMethodBytes() {
      java.lang.Object ref = method_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        method_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * Call data.
     * </pre>
     *
     * <code>bytes data = 4;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!block_.isEmpty()) {
        output.writeBytes(2, block_);
      }
      if (!getMethodBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, method_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(4, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!block_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, block_);
      }
      if (!getMethodBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, method_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest)) {
        return super.equals(obj);
      }
      com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest other = (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest) obj;

      if (!getBlock()
          .equals(other.getBlock())) return false;
      if (!getMethod()
          .equals(other.getMethod())) return false;
      if (!getData()
          .equals(other.getData())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BLOCK_FIELD_NUMBER;
      hash = (53 * hash) + getBlock().hashCode();
      hash = (37 * hash) + METHOD_FIELD_NUMBER;
      hash = (53 * hash) + getMethod().hashCode();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Remote call request.
     * </pre>
     *
     * Protobuf type {@code RemoteCallRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RemoteCallRequest)
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteCallRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteCallRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.Builder.class);
      }

      // Construct using com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        block_ = com.google.protobuf.ByteString.EMPTY;

        method_ = "";

        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteCallRequest_descriptor;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest getDefaultInstanceForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest build() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest buildPartial() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest result = new com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest(this);
        result.block_ = block_;
        result.method_ = method_;
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest) {
          return mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest other) {
        if (other == com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest.getDefaultInstance()) return this;
        if (other.getBlock() != com.google.protobuf.ByteString.EMPTY) {
          setBlock(other.getBlock());
        }
        if (!other.getMethod().isEmpty()) {
          method_ = other.method_;
          onChanged();
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString block_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Block at which to perform call.
       * </pre>
       *
       * <code>bytes block = 2;</code>
       * @return The block.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBlock() {
        return block_;
      }
      /**
       * <pre>
       * Block at which to perform call.
       * </pre>
       *
       * <code>bytes block = 2;</code>
       * @param value The block to set.
       * @return This builder for chaining.
       */
      public Builder setBlock(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        block_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Block at which to perform call.
       * </pre>
       *
       * <code>bytes block = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlock() {
        
        block_ = getDefaultInstance().getBlock();
        onChanged();
        return this;
      }

      private java.lang.Object method_ = "";
      /**
       * <pre>
       * Method name.
       * </pre>
       *
       * <code>string method = 3;</code>
       * @return The method.
       */
      public java.lang.String getMethod() {
        java.lang.Object ref = method_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          method_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Method name.
       * </pre>
       *
       * <code>string method = 3;</code>
       * @return The bytes for method.
       */
      public com.google.protobuf.ByteString
          getMethodBytes() {
        java.lang.Object ref = method_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          method_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Method name.
       * </pre>
       *
       * <code>string method = 3;</code>
       * @param value The method to set.
       * @return This builder for chaining.
       */
      public Builder setMethod(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        method_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Method name.
       * </pre>
       *
       * <code>string method = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMethod() {
        
        method_ = getDefaultInstance().getMethod();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Method name.
       * </pre>
       *
       * <code>string method = 3;</code>
       * @param value The bytes for method to set.
       * @return This builder for chaining.
       */
      public Builder setMethodBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        method_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Call data.
       * </pre>
       *
       * <code>bytes data = 4;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * Call data.
       * </pre>
       *
       * <code>bytes data = 4;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Call data.
       * </pre>
       *
       * <code>bytes data = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RemoteCallRequest)
    }

    // @@protoc_insertion_point(class_scope:RemoteCallRequest)
    private static final com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest();
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RemoteCallRequest>
        PARSER = new com.google.protobuf.AbstractParser<RemoteCallRequest>() {
      @java.lang.Override
      public RemoteCallRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RemoteCallRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RemoteCallRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RemoteCallRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RemoteCallResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RemoteCallResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Execution proof.
     * </pre>
     *
     * <code>bytes proof = 2;</code>
     * @return The proof.
     */
    com.google.protobuf.ByteString getProof();
  }
  /**
   * <pre>
   * Remote call response.
   * </pre>
   *
   * Protobuf type {@code RemoteCallResponse}
   */
  public static final class RemoteCallResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RemoteCallResponse)
      RemoteCallResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RemoteCallResponse.newBuilder() to construct.
    private RemoteCallResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RemoteCallResponse() {
      proof_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RemoteCallResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RemoteCallResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {

              proof_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteCallResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteCallResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.Builder.class);
    }

    public static final int PROOF_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString proof_;
    /**
     * <pre>
     * Execution proof.
     * </pre>
     *
     * <code>bytes proof = 2;</code>
     * @return The proof.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getProof() {
      return proof_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!proof_.isEmpty()) {
        output.writeBytes(2, proof_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!proof_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, proof_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse)) {
        return super.equals(obj);
      }
      com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse other = (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse) obj;

      if (!getProof()
          .equals(other.getProof())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PROOF_FIELD_NUMBER;
      hash = (53 * hash) + getProof().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Remote call response.
     * </pre>
     *
     * Protobuf type {@code RemoteCallResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RemoteCallResponse)
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteCallResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteCallResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.Builder.class);
      }

      // Construct using com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        proof_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteCallResponse_descriptor;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse getDefaultInstanceForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse build() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse buildPartial() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse result = new com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse(this);
        result.proof_ = proof_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse) {
          return mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse other) {
        if (other == com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse.getDefaultInstance()) return this;
        if (other.getProof() != com.google.protobuf.ByteString.EMPTY) {
          setProof(other.getProof());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString proof_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Execution proof.
       * </pre>
       *
       * <code>bytes proof = 2;</code>
       * @return The proof.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getProof() {
        return proof_;
      }
      /**
       * <pre>
       * Execution proof.
       * </pre>
       *
       * <code>bytes proof = 2;</code>
       * @param value The proof to set.
       * @return This builder for chaining.
       */
      public Builder setProof(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        proof_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Execution proof.
       * </pre>
       *
       * <code>bytes proof = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearProof() {
        
        proof_ = getDefaultInstance().getProof();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RemoteCallResponse)
    }

    // @@protoc_insertion_point(class_scope:RemoteCallResponse)
    private static final com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse();
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RemoteCallResponse>
        PARSER = new com.google.protobuf.AbstractParser<RemoteCallResponse>() {
      @java.lang.Override
      public RemoteCallResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RemoteCallResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RemoteCallResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RemoteCallResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteCallResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RemoteReadRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RemoteReadRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Block at which to perform call.
     * </pre>
     *
     * <code>bytes block = 2;</code>
     * @return The block.
     */
    com.google.protobuf.ByteString getBlock();

    /**
     * <pre>
     * Storage keys.
     * </pre>
     *
     * <code>repeated bytes keys = 3;</code>
     * @return A list containing the keys.
     */
    java.util.List<com.google.protobuf.ByteString> getKeysList();
    /**
     * <pre>
     * Storage keys.
     * </pre>
     *
     * <code>repeated bytes keys = 3;</code>
     * @return The count of keys.
     */
    int getKeysCount();
    /**
     * <pre>
     * Storage keys.
     * </pre>
     *
     * <code>repeated bytes keys = 3;</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    com.google.protobuf.ByteString getKeys(int index);
  }
  /**
   * <pre>
   * Remote storage read request.
   * </pre>
   *
   * Protobuf type {@code RemoteReadRequest}
   */
  public static final class RemoteReadRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RemoteReadRequest)
      RemoteReadRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RemoteReadRequest.newBuilder() to construct.
    private RemoteReadRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RemoteReadRequest() {
      block_ = com.google.protobuf.ByteString.EMPTY;
      keys_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RemoteReadRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RemoteReadRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {

              block_ = input.readBytes();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                keys_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000001;
              }
              keys_.add(input.readBytes());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          keys_ = java.util.Collections.unmodifiableList(keys_); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteReadRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteReadRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.Builder.class);
    }

    public static final int BLOCK_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString block_;
    /**
     * <pre>
     * Block at which to perform call.
     * </pre>
     *
     * <code>bytes block = 2;</code>
     * @return The block.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBlock() {
      return block_;
    }

    public static final int KEYS_FIELD_NUMBER = 3;
    private java.util.List<com.google.protobuf.ByteString> keys_;
    /**
     * <pre>
     * Storage keys.
     * </pre>
     *
     * <code>repeated bytes keys = 3;</code>
     * @return A list containing the keys.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getKeysList() {
      return keys_;
    }
    /**
     * <pre>
     * Storage keys.
     * </pre>
     *
     * <code>repeated bytes keys = 3;</code>
     * @return The count of keys.
     */
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <pre>
     * Storage keys.
     * </pre>
     *
     * <code>repeated bytes keys = 3;</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    public com.google.protobuf.ByteString getKeys(int index) {
      return keys_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!block_.isEmpty()) {
        output.writeBytes(2, block_);
      }
      for (int i = 0; i < keys_.size(); i++) {
        output.writeBytes(3, keys_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!block_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, block_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < keys_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(keys_.get(i));
        }
        size += dataSize;
        size += 1 * getKeysList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest)) {
        return super.equals(obj);
      }
      com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest other = (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest) obj;

      if (!getBlock()
          .equals(other.getBlock())) return false;
      if (!getKeysList()
          .equals(other.getKeysList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BLOCK_FIELD_NUMBER;
      hash = (53 * hash) + getBlock().hashCode();
      if (getKeysCount() > 0) {
        hash = (37 * hash) + KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getKeysList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Remote storage read request.
     * </pre>
     *
     * Protobuf type {@code RemoteReadRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RemoteReadRequest)
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteReadRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteReadRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.Builder.class);
      }

      // Construct using com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        block_ = com.google.protobuf.ByteString.EMPTY;

        keys_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteReadRequest_descriptor;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest getDefaultInstanceForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest build() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest buildPartial() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest result = new com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest(this);
        int from_bitField0_ = bitField0_;
        result.block_ = block_;
        if (((bitField0_ & 0x00000001) != 0)) {
          keys_ = java.util.Collections.unmodifiableList(keys_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.keys_ = keys_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest) {
          return mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest other) {
        if (other == com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest.getDefaultInstance()) return this;
        if (other.getBlock() != com.google.protobuf.ByteString.EMPTY) {
          setBlock(other.getBlock());
        }
        if (!other.keys_.isEmpty()) {
          if (keys_.isEmpty()) {
            keys_ = other.keys_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureKeysIsMutable();
            keys_.addAll(other.keys_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString block_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Block at which to perform call.
       * </pre>
       *
       * <code>bytes block = 2;</code>
       * @return The block.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBlock() {
        return block_;
      }
      /**
       * <pre>
       * Block at which to perform call.
       * </pre>
       *
       * <code>bytes block = 2;</code>
       * @param value The block to set.
       * @return This builder for chaining.
       */
      public Builder setBlock(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        block_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Block at which to perform call.
       * </pre>
       *
       * <code>bytes block = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlock() {
        
        block_ = getDefaultInstance().getBlock();
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> keys_ = java.util.Collections.emptyList();
      private void ensureKeysIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          keys_ = new java.util.ArrayList<com.google.protobuf.ByteString>(keys_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Storage keys.
       * </pre>
       *
       * <code>repeated bytes keys = 3;</code>
       * @return A list containing the keys.
       */
      public java.util.List<com.google.protobuf.ByteString>
          getKeysList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(keys_) : keys_;
      }
      /**
       * <pre>
       * Storage keys.
       * </pre>
       *
       * <code>repeated bytes keys = 3;</code>
       * @return The count of keys.
       */
      public int getKeysCount() {
        return keys_.size();
      }
      /**
       * <pre>
       * Storage keys.
       * </pre>
       *
       * <code>repeated bytes keys = 3;</code>
       * @param index The index of the element to return.
       * @return The keys at the given index.
       */
      public com.google.protobuf.ByteString getKeys(int index) {
        return keys_.get(index);
      }
      /**
       * <pre>
       * Storage keys.
       * </pre>
       *
       * <code>repeated bytes keys = 3;</code>
       * @param index The index to set the value at.
       * @param value The keys to set.
       * @return This builder for chaining.
       */
      public Builder setKeys(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Storage keys.
       * </pre>
       *
       * <code>repeated bytes keys = 3;</code>
       * @param value The keys to add.
       * @return This builder for chaining.
       */
      public Builder addKeys(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Storage keys.
       * </pre>
       *
       * <code>repeated bytes keys = 3;</code>
       * @param values The keys to add.
       * @return This builder for chaining.
       */
      public Builder addAllKeys(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureKeysIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, keys_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Storage keys.
       * </pre>
       *
       * <code>repeated bytes keys = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeys() {
        keys_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RemoteReadRequest)
    }

    // @@protoc_insertion_point(class_scope:RemoteReadRequest)
    private static final com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest();
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RemoteReadRequest>
        PARSER = new com.google.protobuf.AbstractParser<RemoteReadRequest>() {
      @java.lang.Override
      public RemoteReadRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RemoteReadRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RemoteReadRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RemoteReadRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RemoteReadResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RemoteReadResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Read proof.
     * </pre>
     *
     * <code>bytes proof = 2;</code>
     * @return The proof.
     */
    com.google.protobuf.ByteString getProof();
  }
  /**
   * <pre>
   * Remote read response.
   * </pre>
   *
   * Protobuf type {@code RemoteReadResponse}
   */
  public static final class RemoteReadResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RemoteReadResponse)
      RemoteReadResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RemoteReadResponse.newBuilder() to construct.
    private RemoteReadResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RemoteReadResponse() {
      proof_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RemoteReadResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RemoteReadResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {

              proof_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteReadResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteReadResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.Builder.class);
    }

    public static final int PROOF_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString proof_;
    /**
     * <pre>
     * Read proof.
     * </pre>
     *
     * <code>bytes proof = 2;</code>
     * @return The proof.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getProof() {
      return proof_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!proof_.isEmpty()) {
        output.writeBytes(2, proof_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!proof_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, proof_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse)) {
        return super.equals(obj);
      }
      com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse other = (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse) obj;

      if (!getProof()
          .equals(other.getProof())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PROOF_FIELD_NUMBER;
      hash = (53 * hash) + getProof().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Remote read response.
     * </pre>
     *
     * Protobuf type {@code RemoteReadResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RemoteReadResponse)
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteReadResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteReadResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.Builder.class);
      }

      // Construct using com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        proof_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteReadResponse_descriptor;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse getDefaultInstanceForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse build() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse buildPartial() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse result = new com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse(this);
        result.proof_ = proof_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse) {
          return mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse other) {
        if (other == com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse.getDefaultInstance()) return this;
        if (other.getProof() != com.google.protobuf.ByteString.EMPTY) {
          setProof(other.getProof());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString proof_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Read proof.
       * </pre>
       *
       * <code>bytes proof = 2;</code>
       * @return The proof.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getProof() {
        return proof_;
      }
      /**
       * <pre>
       * Read proof.
       * </pre>
       *
       * <code>bytes proof = 2;</code>
       * @param value The proof to set.
       * @return This builder for chaining.
       */
      public Builder setProof(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        proof_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Read proof.
       * </pre>
       *
       * <code>bytes proof = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearProof() {
        
        proof_ = getDefaultInstance().getProof();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RemoteReadResponse)
    }

    // @@protoc_insertion_point(class_scope:RemoteReadResponse)
    private static final com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse();
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RemoteReadResponse>
        PARSER = new com.google.protobuf.AbstractParser<RemoteReadResponse>() {
      @java.lang.Override
      public RemoteReadResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RemoteReadResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RemoteReadResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RemoteReadResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RemoteReadChildRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RemoteReadChildRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Block at which to perform call.
     * </pre>
     *
     * <code>bytes block = 2;</code>
     * @return The block.
     */
    com.google.protobuf.ByteString getBlock();

    /**
     * <pre>
     * Child Storage key, this is relative
     * to the child type storage location.
     * </pre>
     *
     * <code>bytes storage_key = 3;</code>
     * @return The storageKey.
     */
    com.google.protobuf.ByteString getStorageKey();

    /**
     * <pre>
     * Storage keys.
     * </pre>
     *
     * <code>repeated bytes keys = 6;</code>
     * @return A list containing the keys.
     */
    java.util.List<com.google.protobuf.ByteString> getKeysList();
    /**
     * <pre>
     * Storage keys.
     * </pre>
     *
     * <code>repeated bytes keys = 6;</code>
     * @return The count of keys.
     */
    int getKeysCount();
    /**
     * <pre>
     * Storage keys.
     * </pre>
     *
     * <code>repeated bytes keys = 6;</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    com.google.protobuf.ByteString getKeys(int index);
  }
  /**
   * <pre>
   * Remote storage read child request.
   * </pre>
   *
   * Protobuf type {@code RemoteReadChildRequest}
   */
  public static final class RemoteReadChildRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RemoteReadChildRequest)
      RemoteReadChildRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RemoteReadChildRequest.newBuilder() to construct.
    private RemoteReadChildRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RemoteReadChildRequest() {
      block_ = com.google.protobuf.ByteString.EMPTY;
      storageKey_ = com.google.protobuf.ByteString.EMPTY;
      keys_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RemoteReadChildRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RemoteReadChildRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {

              block_ = input.readBytes();
              break;
            }
            case 26: {

              storageKey_ = input.readBytes();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                keys_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000001;
              }
              keys_.add(input.readBytes());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          keys_ = java.util.Collections.unmodifiableList(keys_); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteReadChildRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteReadChildRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.Builder.class);
    }

    public static final int BLOCK_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString block_;
    /**
     * <pre>
     * Block at which to perform call.
     * </pre>
     *
     * <code>bytes block = 2;</code>
     * @return The block.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBlock() {
      return block_;
    }

    public static final int STORAGE_KEY_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString storageKey_;
    /**
     * <pre>
     * Child Storage key, this is relative
     * to the child type storage location.
     * </pre>
     *
     * <code>bytes storage_key = 3;</code>
     * @return The storageKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getStorageKey() {
      return storageKey_;
    }

    public static final int KEYS_FIELD_NUMBER = 6;
    private java.util.List<com.google.protobuf.ByteString> keys_;
    /**
     * <pre>
     * Storage keys.
     * </pre>
     *
     * <code>repeated bytes keys = 6;</code>
     * @return A list containing the keys.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getKeysList() {
      return keys_;
    }
    /**
     * <pre>
     * Storage keys.
     * </pre>
     *
     * <code>repeated bytes keys = 6;</code>
     * @return The count of keys.
     */
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <pre>
     * Storage keys.
     * </pre>
     *
     * <code>repeated bytes keys = 6;</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    public com.google.protobuf.ByteString getKeys(int index) {
      return keys_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!block_.isEmpty()) {
        output.writeBytes(2, block_);
      }
      if (!storageKey_.isEmpty()) {
        output.writeBytes(3, storageKey_);
      }
      for (int i = 0; i < keys_.size(); i++) {
        output.writeBytes(6, keys_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!block_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, block_);
      }
      if (!storageKey_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, storageKey_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < keys_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(keys_.get(i));
        }
        size += dataSize;
        size += 1 * getKeysList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest)) {
        return super.equals(obj);
      }
      com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest other = (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest) obj;

      if (!getBlock()
          .equals(other.getBlock())) return false;
      if (!getStorageKey()
          .equals(other.getStorageKey())) return false;
      if (!getKeysList()
          .equals(other.getKeysList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BLOCK_FIELD_NUMBER;
      hash = (53 * hash) + getBlock().hashCode();
      hash = (37 * hash) + STORAGE_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getStorageKey().hashCode();
      if (getKeysCount() > 0) {
        hash = (37 * hash) + KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getKeysList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Remote storage read child request.
     * </pre>
     *
     * Protobuf type {@code RemoteReadChildRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RemoteReadChildRequest)
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteReadChildRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteReadChildRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.Builder.class);
      }

      // Construct using com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        block_ = com.google.protobuf.ByteString.EMPTY;

        storageKey_ = com.google.protobuf.ByteString.EMPTY;

        keys_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteReadChildRequest_descriptor;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest getDefaultInstanceForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest build() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest buildPartial() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest result = new com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest(this);
        int from_bitField0_ = bitField0_;
        result.block_ = block_;
        result.storageKey_ = storageKey_;
        if (((bitField0_ & 0x00000001) != 0)) {
          keys_ = java.util.Collections.unmodifiableList(keys_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.keys_ = keys_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest) {
          return mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest other) {
        if (other == com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest.getDefaultInstance()) return this;
        if (other.getBlock() != com.google.protobuf.ByteString.EMPTY) {
          setBlock(other.getBlock());
        }
        if (other.getStorageKey() != com.google.protobuf.ByteString.EMPTY) {
          setStorageKey(other.getStorageKey());
        }
        if (!other.keys_.isEmpty()) {
          if (keys_.isEmpty()) {
            keys_ = other.keys_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureKeysIsMutable();
            keys_.addAll(other.keys_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString block_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Block at which to perform call.
       * </pre>
       *
       * <code>bytes block = 2;</code>
       * @return The block.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBlock() {
        return block_;
      }
      /**
       * <pre>
       * Block at which to perform call.
       * </pre>
       *
       * <code>bytes block = 2;</code>
       * @param value The block to set.
       * @return This builder for chaining.
       */
      public Builder setBlock(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        block_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Block at which to perform call.
       * </pre>
       *
       * <code>bytes block = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlock() {
        
        block_ = getDefaultInstance().getBlock();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString storageKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Child Storage key, this is relative
       * to the child type storage location.
       * </pre>
       *
       * <code>bytes storage_key = 3;</code>
       * @return The storageKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getStorageKey() {
        return storageKey_;
      }
      /**
       * <pre>
       * Child Storage key, this is relative
       * to the child type storage location.
       * </pre>
       *
       * <code>bytes storage_key = 3;</code>
       * @param value The storageKey to set.
       * @return This builder for chaining.
       */
      public Builder setStorageKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        storageKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Child Storage key, this is relative
       * to the child type storage location.
       * </pre>
       *
       * <code>bytes storage_key = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearStorageKey() {
        
        storageKey_ = getDefaultInstance().getStorageKey();
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> keys_ = java.util.Collections.emptyList();
      private void ensureKeysIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          keys_ = new java.util.ArrayList<com.google.protobuf.ByteString>(keys_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Storage keys.
       * </pre>
       *
       * <code>repeated bytes keys = 6;</code>
       * @return A list containing the keys.
       */
      public java.util.List<com.google.protobuf.ByteString>
          getKeysList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(keys_) : keys_;
      }
      /**
       * <pre>
       * Storage keys.
       * </pre>
       *
       * <code>repeated bytes keys = 6;</code>
       * @return The count of keys.
       */
      public int getKeysCount() {
        return keys_.size();
      }
      /**
       * <pre>
       * Storage keys.
       * </pre>
       *
       * <code>repeated bytes keys = 6;</code>
       * @param index The index of the element to return.
       * @return The keys at the given index.
       */
      public com.google.protobuf.ByteString getKeys(int index) {
        return keys_.get(index);
      }
      /**
       * <pre>
       * Storage keys.
       * </pre>
       *
       * <code>repeated bytes keys = 6;</code>
       * @param index The index to set the value at.
       * @param value The keys to set.
       * @return This builder for chaining.
       */
      public Builder setKeys(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Storage keys.
       * </pre>
       *
       * <code>repeated bytes keys = 6;</code>
       * @param value The keys to add.
       * @return This builder for chaining.
       */
      public Builder addKeys(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeysIsMutable();
        keys_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Storage keys.
       * </pre>
       *
       * <code>repeated bytes keys = 6;</code>
       * @param values The keys to add.
       * @return This builder for chaining.
       */
      public Builder addAllKeys(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureKeysIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, keys_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Storage keys.
       * </pre>
       *
       * <code>repeated bytes keys = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeys() {
        keys_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RemoteReadChildRequest)
    }

    // @@protoc_insertion_point(class_scope:RemoteReadChildRequest)
    private static final com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest();
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RemoteReadChildRequest>
        PARSER = new com.google.protobuf.AbstractParser<RemoteReadChildRequest>() {
      @java.lang.Override
      public RemoteReadChildRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RemoteReadChildRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RemoteReadChildRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RemoteReadChildRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteReadChildRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RemoteHeaderRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RemoteHeaderRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Block number to request header for.
     * </pre>
     *
     * <code>bytes block = 2;</code>
     * @return The block.
     */
    com.google.protobuf.ByteString getBlock();
  }
  /**
   * <pre>
   * Remote header request.
   * </pre>
   *
   * Protobuf type {@code RemoteHeaderRequest}
   */
  public static final class RemoteHeaderRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RemoteHeaderRequest)
      RemoteHeaderRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RemoteHeaderRequest.newBuilder() to construct.
    private RemoteHeaderRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RemoteHeaderRequest() {
      block_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RemoteHeaderRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RemoteHeaderRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {

              block_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteHeaderRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteHeaderRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.Builder.class);
    }

    public static final int BLOCK_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString block_;
    /**
     * <pre>
     * Block number to request header for.
     * </pre>
     *
     * <code>bytes block = 2;</code>
     * @return The block.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBlock() {
      return block_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!block_.isEmpty()) {
        output.writeBytes(2, block_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!block_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, block_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest)) {
        return super.equals(obj);
      }
      com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest other = (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest) obj;

      if (!getBlock()
          .equals(other.getBlock())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BLOCK_FIELD_NUMBER;
      hash = (53 * hash) + getBlock().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Remote header request.
     * </pre>
     *
     * Protobuf type {@code RemoteHeaderRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RemoteHeaderRequest)
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteHeaderRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteHeaderRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.Builder.class);
      }

      // Construct using com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        block_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteHeaderRequest_descriptor;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest getDefaultInstanceForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest build() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest buildPartial() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest result = new com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest(this);
        result.block_ = block_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest) {
          return mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest other) {
        if (other == com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest.getDefaultInstance()) return this;
        if (other.getBlock() != com.google.protobuf.ByteString.EMPTY) {
          setBlock(other.getBlock());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString block_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Block number to request header for.
       * </pre>
       *
       * <code>bytes block = 2;</code>
       * @return The block.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBlock() {
        return block_;
      }
      /**
       * <pre>
       * Block number to request header for.
       * </pre>
       *
       * <code>bytes block = 2;</code>
       * @param value The block to set.
       * @return This builder for chaining.
       */
      public Builder setBlock(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        block_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Block number to request header for.
       * </pre>
       *
       * <code>bytes block = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlock() {
        
        block_ = getDefaultInstance().getBlock();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RemoteHeaderRequest)
    }

    // @@protoc_insertion_point(class_scope:RemoteHeaderRequest)
    private static final com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest();
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RemoteHeaderRequest>
        PARSER = new com.google.protobuf.AbstractParser<RemoteHeaderRequest>() {
      @java.lang.Override
      public RemoteHeaderRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RemoteHeaderRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RemoteHeaderRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RemoteHeaderRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RemoteHeaderResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RemoteHeaderResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Header. None if proof generation has failed (e.g. header is unknown).
     * </pre>
     *
     * <code>bytes header = 2;</code>
     * @return The header.
     */
    com.google.protobuf.ByteString getHeader();

    /**
     * <pre>
     * Header proof.
     * </pre>
     *
     * <code>bytes proof = 3;</code>
     * @return The proof.
     */
    com.google.protobuf.ByteString getProof();
  }
  /**
   * <pre>
   * Remote header response.
   * </pre>
   *
   * Protobuf type {@code RemoteHeaderResponse}
   */
  public static final class RemoteHeaderResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RemoteHeaderResponse)
      RemoteHeaderResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RemoteHeaderResponse.newBuilder() to construct.
    private RemoteHeaderResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RemoteHeaderResponse() {
      header_ = com.google.protobuf.ByteString.EMPTY;
      proof_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RemoteHeaderResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RemoteHeaderResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {

              header_ = input.readBytes();
              break;
            }
            case 26: {

              proof_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteHeaderResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteHeaderResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.Builder.class);
    }

    public static final int HEADER_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString header_;
    /**
     * <pre>
     * Header. None if proof generation has failed (e.g. header is unknown).
     * </pre>
     *
     * <code>bytes header = 2;</code>
     * @return The header.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getHeader() {
      return header_;
    }

    public static final int PROOF_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString proof_;
    /**
     * <pre>
     * Header proof.
     * </pre>
     *
     * <code>bytes proof = 3;</code>
     * @return The proof.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getProof() {
      return proof_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!header_.isEmpty()) {
        output.writeBytes(2, header_);
      }
      if (!proof_.isEmpty()) {
        output.writeBytes(3, proof_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!header_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, header_);
      }
      if (!proof_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, proof_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse)) {
        return super.equals(obj);
      }
      com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse other = (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse) obj;

      if (!getHeader()
          .equals(other.getHeader())) return false;
      if (!getProof()
          .equals(other.getProof())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HEADER_FIELD_NUMBER;
      hash = (53 * hash) + getHeader().hashCode();
      hash = (37 * hash) + PROOF_FIELD_NUMBER;
      hash = (53 * hash) + getProof().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Remote header response.
     * </pre>
     *
     * Protobuf type {@code RemoteHeaderResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RemoteHeaderResponse)
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteHeaderResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteHeaderResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.Builder.class);
      }

      // Construct using com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        header_ = com.google.protobuf.ByteString.EMPTY;

        proof_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteHeaderResponse_descriptor;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse getDefaultInstanceForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse build() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse buildPartial() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse result = new com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse(this);
        result.header_ = header_;
        result.proof_ = proof_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse) {
          return mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse other) {
        if (other == com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse.getDefaultInstance()) return this;
        if (other.getHeader() != com.google.protobuf.ByteString.EMPTY) {
          setHeader(other.getHeader());
        }
        if (other.getProof() != com.google.protobuf.ByteString.EMPTY) {
          setProof(other.getProof());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString header_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Header. None if proof generation has failed (e.g. header is unknown).
       * </pre>
       *
       * <code>bytes header = 2;</code>
       * @return The header.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getHeader() {
        return header_;
      }
      /**
       * <pre>
       * Header. None if proof generation has failed (e.g. header is unknown).
       * </pre>
       *
       * <code>bytes header = 2;</code>
       * @param value The header to set.
       * @return This builder for chaining.
       */
      public Builder setHeader(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        header_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Header. None if proof generation has failed (e.g. header is unknown).
       * </pre>
       *
       * <code>bytes header = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeader() {
        
        header_ = getDefaultInstance().getHeader();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString proof_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Header proof.
       * </pre>
       *
       * <code>bytes proof = 3;</code>
       * @return The proof.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getProof() {
        return proof_;
      }
      /**
       * <pre>
       * Header proof.
       * </pre>
       *
       * <code>bytes proof = 3;</code>
       * @param value The proof to set.
       * @return This builder for chaining.
       */
      public Builder setProof(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        proof_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Header proof.
       * </pre>
       *
       * <code>bytes proof = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearProof() {
        
        proof_ = getDefaultInstance().getProof();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RemoteHeaderResponse)
    }

    // @@protoc_insertion_point(class_scope:RemoteHeaderResponse)
    private static final com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse();
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RemoteHeaderResponse>
        PARSER = new com.google.protobuf.AbstractParser<RemoteHeaderResponse>() {
      @java.lang.Override
      public RemoteHeaderResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RemoteHeaderResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RemoteHeaderResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RemoteHeaderResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteHeaderResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RemoteChangesRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RemoteChangesRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Hash of the first block of the range (including first) where changes are requested.
     * </pre>
     *
     * <code>bytes first = 2;</code>
     * @return The first.
     */
    com.google.protobuf.ByteString getFirst();

    /**
     * <pre>
     * Hash of the last block of the range (including last) where changes are requested.
     * </pre>
     *
     * <code>bytes last = 3;</code>
     * @return The last.
     */
    com.google.protobuf.ByteString getLast();

    /**
     * <pre>
     * Hash of the first block for which the requester has the changes trie root. All other
     * affected roots must be proved.
     * </pre>
     *
     * <code>bytes min = 4;</code>
     * @return The min.
     */
    com.google.protobuf.ByteString getMin();

    /**
     * <pre>
     * Hash of the last block that we can use when querying changes.
     * </pre>
     *
     * <code>bytes max = 5;</code>
     * @return The max.
     */
    com.google.protobuf.ByteString getMax();

    /**
     * <pre>
     * Storage child node key which changes are requested.
     * </pre>
     *
     * <code>bytes storage_key = 6;</code>
     * @return The storageKey.
     */
    com.google.protobuf.ByteString getStorageKey();

    /**
     * <pre>
     * Storage key which changes are requested.
     * </pre>
     *
     * <code>bytes key = 7;</code>
     * @return The key.
     */
    com.google.protobuf.ByteString getKey();
  }
  /**
   * <pre>
   *&#47; Remote changes request.
   * </pre>
   *
   * Protobuf type {@code RemoteChangesRequest}
   */
  public static final class RemoteChangesRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RemoteChangesRequest)
      RemoteChangesRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RemoteChangesRequest.newBuilder() to construct.
    private RemoteChangesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RemoteChangesRequest() {
      first_ = com.google.protobuf.ByteString.EMPTY;
      last_ = com.google.protobuf.ByteString.EMPTY;
      min_ = com.google.protobuf.ByteString.EMPTY;
      max_ = com.google.protobuf.ByteString.EMPTY;
      storageKey_ = com.google.protobuf.ByteString.EMPTY;
      key_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RemoteChangesRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RemoteChangesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {

              first_ = input.readBytes();
              break;
            }
            case 26: {

              last_ = input.readBytes();
              break;
            }
            case 34: {

              min_ = input.readBytes();
              break;
            }
            case 42: {

              max_ = input.readBytes();
              break;
            }
            case 50: {

              storageKey_ = input.readBytes();
              break;
            }
            case 58: {

              key_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteChangesRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteChangesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.Builder.class);
    }

    public static final int FIRST_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString first_;
    /**
     * <pre>
     * Hash of the first block of the range (including first) where changes are requested.
     * </pre>
     *
     * <code>bytes first = 2;</code>
     * @return The first.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFirst() {
      return first_;
    }

    public static final int LAST_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString last_;
    /**
     * <pre>
     * Hash of the last block of the range (including last) where changes are requested.
     * </pre>
     *
     * <code>bytes last = 3;</code>
     * @return The last.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getLast() {
      return last_;
    }

    public static final int MIN_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString min_;
    /**
     * <pre>
     * Hash of the first block for which the requester has the changes trie root. All other
     * affected roots must be proved.
     * </pre>
     *
     * <code>bytes min = 4;</code>
     * @return The min.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMin() {
      return min_;
    }

    public static final int MAX_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString max_;
    /**
     * <pre>
     * Hash of the last block that we can use when querying changes.
     * </pre>
     *
     * <code>bytes max = 5;</code>
     * @return The max.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMax() {
      return max_;
    }

    public static final int STORAGE_KEY_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString storageKey_;
    /**
     * <pre>
     * Storage child node key which changes are requested.
     * </pre>
     *
     * <code>bytes storage_key = 6;</code>
     * @return The storageKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getStorageKey() {
      return storageKey_;
    }

    public static final int KEY_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString key_;
    /**
     * <pre>
     * Storage key which changes are requested.
     * </pre>
     *
     * <code>bytes key = 7;</code>
     * @return The key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getKey() {
      return key_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!first_.isEmpty()) {
        output.writeBytes(2, first_);
      }
      if (!last_.isEmpty()) {
        output.writeBytes(3, last_);
      }
      if (!min_.isEmpty()) {
        output.writeBytes(4, min_);
      }
      if (!max_.isEmpty()) {
        output.writeBytes(5, max_);
      }
      if (!storageKey_.isEmpty()) {
        output.writeBytes(6, storageKey_);
      }
      if (!key_.isEmpty()) {
        output.writeBytes(7, key_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!first_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, first_);
      }
      if (!last_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, last_);
      }
      if (!min_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, min_);
      }
      if (!max_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, max_);
      }
      if (!storageKey_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, storageKey_);
      }
      if (!key_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, key_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest)) {
        return super.equals(obj);
      }
      com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest other = (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest) obj;

      if (!getFirst()
          .equals(other.getFirst())) return false;
      if (!getLast()
          .equals(other.getLast())) return false;
      if (!getMin()
          .equals(other.getMin())) return false;
      if (!getMax()
          .equals(other.getMax())) return false;
      if (!getStorageKey()
          .equals(other.getStorageKey())) return false;
      if (!getKey()
          .equals(other.getKey())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FIRST_FIELD_NUMBER;
      hash = (53 * hash) + getFirst().hashCode();
      hash = (37 * hash) + LAST_FIELD_NUMBER;
      hash = (53 * hash) + getLast().hashCode();
      hash = (37 * hash) + MIN_FIELD_NUMBER;
      hash = (53 * hash) + getMin().hashCode();
      hash = (37 * hash) + MAX_FIELD_NUMBER;
      hash = (53 * hash) + getMax().hashCode();
      hash = (37 * hash) + STORAGE_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getStorageKey().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *&#47; Remote changes request.
     * </pre>
     *
     * Protobuf type {@code RemoteChangesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RemoteChangesRequest)
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteChangesRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteChangesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.Builder.class);
      }

      // Construct using com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        first_ = com.google.protobuf.ByteString.EMPTY;

        last_ = com.google.protobuf.ByteString.EMPTY;

        min_ = com.google.protobuf.ByteString.EMPTY;

        max_ = com.google.protobuf.ByteString.EMPTY;

        storageKey_ = com.google.protobuf.ByteString.EMPTY;

        key_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteChangesRequest_descriptor;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest getDefaultInstanceForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest build() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest buildPartial() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest result = new com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest(this);
        result.first_ = first_;
        result.last_ = last_;
        result.min_ = min_;
        result.max_ = max_;
        result.storageKey_ = storageKey_;
        result.key_ = key_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest) {
          return mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest other) {
        if (other == com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest.getDefaultInstance()) return this;
        if (other.getFirst() != com.google.protobuf.ByteString.EMPTY) {
          setFirst(other.getFirst());
        }
        if (other.getLast() != com.google.protobuf.ByteString.EMPTY) {
          setLast(other.getLast());
        }
        if (other.getMin() != com.google.protobuf.ByteString.EMPTY) {
          setMin(other.getMin());
        }
        if (other.getMax() != com.google.protobuf.ByteString.EMPTY) {
          setMax(other.getMax());
        }
        if (other.getStorageKey() != com.google.protobuf.ByteString.EMPTY) {
          setStorageKey(other.getStorageKey());
        }
        if (other.getKey() != com.google.protobuf.ByteString.EMPTY) {
          setKey(other.getKey());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString first_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Hash of the first block of the range (including first) where changes are requested.
       * </pre>
       *
       * <code>bytes first = 2;</code>
       * @return The first.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getFirst() {
        return first_;
      }
      /**
       * <pre>
       * Hash of the first block of the range (including first) where changes are requested.
       * </pre>
       *
       * <code>bytes first = 2;</code>
       * @param value The first to set.
       * @return This builder for chaining.
       */
      public Builder setFirst(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        first_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Hash of the first block of the range (including first) where changes are requested.
       * </pre>
       *
       * <code>bytes first = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFirst() {
        
        first_ = getDefaultInstance().getFirst();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString last_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Hash of the last block of the range (including last) where changes are requested.
       * </pre>
       *
       * <code>bytes last = 3;</code>
       * @return The last.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getLast() {
        return last_;
      }
      /**
       * <pre>
       * Hash of the last block of the range (including last) where changes are requested.
       * </pre>
       *
       * <code>bytes last = 3;</code>
       * @param value The last to set.
       * @return This builder for chaining.
       */
      public Builder setLast(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        last_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Hash of the last block of the range (including last) where changes are requested.
       * </pre>
       *
       * <code>bytes last = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLast() {
        
        last_ = getDefaultInstance().getLast();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString min_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Hash of the first block for which the requester has the changes trie root. All other
       * affected roots must be proved.
       * </pre>
       *
       * <code>bytes min = 4;</code>
       * @return The min.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMin() {
        return min_;
      }
      /**
       * <pre>
       * Hash of the first block for which the requester has the changes trie root. All other
       * affected roots must be proved.
       * </pre>
       *
       * <code>bytes min = 4;</code>
       * @param value The min to set.
       * @return This builder for chaining.
       */
      public Builder setMin(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        min_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Hash of the first block for which the requester has the changes trie root. All other
       * affected roots must be proved.
       * </pre>
       *
       * <code>bytes min = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMin() {
        
        min_ = getDefaultInstance().getMin();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString max_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Hash of the last block that we can use when querying changes.
       * </pre>
       *
       * <code>bytes max = 5;</code>
       * @return The max.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMax() {
        return max_;
      }
      /**
       * <pre>
       * Hash of the last block that we can use when querying changes.
       * </pre>
       *
       * <code>bytes max = 5;</code>
       * @param value The max to set.
       * @return This builder for chaining.
       */
      public Builder setMax(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        max_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Hash of the last block that we can use when querying changes.
       * </pre>
       *
       * <code>bytes max = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMax() {
        
        max_ = getDefaultInstance().getMax();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString storageKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Storage child node key which changes are requested.
       * </pre>
       *
       * <code>bytes storage_key = 6;</code>
       * @return The storageKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getStorageKey() {
        return storageKey_;
      }
      /**
       * <pre>
       * Storage child node key which changes are requested.
       * </pre>
       *
       * <code>bytes storage_key = 6;</code>
       * @param value The storageKey to set.
       * @return This builder for chaining.
       */
      public Builder setStorageKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        storageKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Storage child node key which changes are requested.
       * </pre>
       *
       * <code>bytes storage_key = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearStorageKey() {
        
        storageKey_ = getDefaultInstance().getStorageKey();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Storage key which changes are requested.
       * </pre>
       *
       * <code>bytes key = 7;</code>
       * @return The key.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getKey() {
        return key_;
      }
      /**
       * <pre>
       * Storage key which changes are requested.
       * </pre>
       *
       * <code>bytes key = 7;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Storage key which changes are requested.
       * </pre>
       *
       * <code>bytes key = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RemoteChangesRequest)
    }

    // @@protoc_insertion_point(class_scope:RemoteChangesRequest)
    private static final com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest();
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RemoteChangesRequest>
        PARSER = new com.google.protobuf.AbstractParser<RemoteChangesRequest>() {
      @java.lang.Override
      public RemoteChangesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RemoteChangesRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RemoteChangesRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RemoteChangesRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RemoteChangesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RemoteChangesResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Proof has been generated using block with this number as a max block. Should be
     * less than or equal to the RemoteChangesRequest::max block number.
     * </pre>
     *
     * <code>bytes max = 2;</code>
     * @return The max.
     */
    com.google.protobuf.ByteString getMax();

    /**
     * <pre>
     * Changes proof.
     * </pre>
     *
     * <code>repeated bytes proof = 3;</code>
     * @return A list containing the proof.
     */
    java.util.List<com.google.protobuf.ByteString> getProofList();
    /**
     * <pre>
     * Changes proof.
     * </pre>
     *
     * <code>repeated bytes proof = 3;</code>
     * @return The count of proof.
     */
    int getProofCount();
    /**
     * <pre>
     * Changes proof.
     * </pre>
     *
     * <code>repeated bytes proof = 3;</code>
     * @param index The index of the element to return.
     * @return The proof at the given index.
     */
    com.google.protobuf.ByteString getProof(int index);

    /**
     * <pre>
     * Changes tries roots missing on the requester' node.
     * </pre>
     *
     * <code>repeated .Pair roots = 4;</code>
     */
    java.util.List<com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair> 
        getRootsList();
    /**
     * <pre>
     * Changes tries roots missing on the requester' node.
     * </pre>
     *
     * <code>repeated .Pair roots = 4;</code>
     */
    com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair getRoots(int index);
    /**
     * <pre>
     * Changes tries roots missing on the requester' node.
     * </pre>
     *
     * <code>repeated .Pair roots = 4;</code>
     */
    int getRootsCount();
    /**
     * <pre>
     * Changes tries roots missing on the requester' node.
     * </pre>
     *
     * <code>repeated .Pair roots = 4;</code>
     */
    java.util.List<? extends com.limechain.network.substream.lightclient.pb.LightClientMessage.PairOrBuilder> 
        getRootsOrBuilderList();
    /**
     * <pre>
     * Changes tries roots missing on the requester' node.
     * </pre>
     *
     * <code>repeated .Pair roots = 4;</code>
     */
    com.limechain.network.substream.lightclient.pb.LightClientMessage.PairOrBuilder getRootsOrBuilder(
        int index);

    /**
     * <pre>
     * Missing changes tries roots proof.
     * </pre>
     *
     * <code>bytes roots_proof = 5;</code>
     * @return The rootsProof.
     */
    com.google.protobuf.ByteString getRootsProof();
  }
  /**
   * <pre>
   * Remote changes response.
   * </pre>
   *
   * Protobuf type {@code RemoteChangesResponse}
   */
  public static final class RemoteChangesResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RemoteChangesResponse)
      RemoteChangesResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RemoteChangesResponse.newBuilder() to construct.
    private RemoteChangesResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RemoteChangesResponse() {
      max_ = com.google.protobuf.ByteString.EMPTY;
      proof_ = java.util.Collections.emptyList();
      roots_ = java.util.Collections.emptyList();
      rootsProof_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RemoteChangesResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RemoteChangesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {

              max_ = input.readBytes();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                proof_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000001;
              }
              proof_.add(input.readBytes());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                roots_ = new java.util.ArrayList<com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair>();
                mutable_bitField0_ |= 0x00000002;
              }
              roots_.add(
                  input.readMessage(com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair.parser(), extensionRegistry));
              break;
            }
            case 42: {

              rootsProof_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          proof_ = java.util.Collections.unmodifiableList(proof_); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          roots_ = java.util.Collections.unmodifiableList(roots_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteChangesResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteChangesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.Builder.class);
    }

    public static final int MAX_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString max_;
    /**
     * <pre>
     * Proof has been generated using block with this number as a max block. Should be
     * less than or equal to the RemoteChangesRequest::max block number.
     * </pre>
     *
     * <code>bytes max = 2;</code>
     * @return The max.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMax() {
      return max_;
    }

    public static final int PROOF_FIELD_NUMBER = 3;
    private java.util.List<com.google.protobuf.ByteString> proof_;
    /**
     * <pre>
     * Changes proof.
     * </pre>
     *
     * <code>repeated bytes proof = 3;</code>
     * @return A list containing the proof.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getProofList() {
      return proof_;
    }
    /**
     * <pre>
     * Changes proof.
     * </pre>
     *
     * <code>repeated bytes proof = 3;</code>
     * @return The count of proof.
     */
    public int getProofCount() {
      return proof_.size();
    }
    /**
     * <pre>
     * Changes proof.
     * </pre>
     *
     * <code>repeated bytes proof = 3;</code>
     * @param index The index of the element to return.
     * @return The proof at the given index.
     */
    public com.google.protobuf.ByteString getProof(int index) {
      return proof_.get(index);
    }

    public static final int ROOTS_FIELD_NUMBER = 4;
    private java.util.List<com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair> roots_;
    /**
     * <pre>
     * Changes tries roots missing on the requester' node.
     * </pre>
     *
     * <code>repeated .Pair roots = 4;</code>
     */
    @java.lang.Override
    public java.util.List<com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair> getRootsList() {
      return roots_;
    }
    /**
     * <pre>
     * Changes tries roots missing on the requester' node.
     * </pre>
     *
     * <code>repeated .Pair roots = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.limechain.network.substream.lightclient.pb.LightClientMessage.PairOrBuilder> 
        getRootsOrBuilderList() {
      return roots_;
    }
    /**
     * <pre>
     * Changes tries roots missing on the requester' node.
     * </pre>
     *
     * <code>repeated .Pair roots = 4;</code>
     */
    @java.lang.Override
    public int getRootsCount() {
      return roots_.size();
    }
    /**
     * <pre>
     * Changes tries roots missing on the requester' node.
     * </pre>
     *
     * <code>repeated .Pair roots = 4;</code>
     */
    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair getRoots(int index) {
      return roots_.get(index);
    }
    /**
     * <pre>
     * Changes tries roots missing on the requester' node.
     * </pre>
     *
     * <code>repeated .Pair roots = 4;</code>
     */
    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.PairOrBuilder getRootsOrBuilder(
        int index) {
      return roots_.get(index);
    }

    public static final int ROOTS_PROOF_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString rootsProof_;
    /**
     * <pre>
     * Missing changes tries roots proof.
     * </pre>
     *
     * <code>bytes roots_proof = 5;</code>
     * @return The rootsProof.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRootsProof() {
      return rootsProof_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!max_.isEmpty()) {
        output.writeBytes(2, max_);
      }
      for (int i = 0; i < proof_.size(); i++) {
        output.writeBytes(3, proof_.get(i));
      }
      for (int i = 0; i < roots_.size(); i++) {
        output.writeMessage(4, roots_.get(i));
      }
      if (!rootsProof_.isEmpty()) {
        output.writeBytes(5, rootsProof_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!max_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, max_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < proof_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(proof_.get(i));
        }
        size += dataSize;
        size += 1 * getProofList().size();
      }
      for (int i = 0; i < roots_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, roots_.get(i));
      }
      if (!rootsProof_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, rootsProof_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse)) {
        return super.equals(obj);
      }
      com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse other = (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse) obj;

      if (!getMax()
          .equals(other.getMax())) return false;
      if (!getProofList()
          .equals(other.getProofList())) return false;
      if (!getRootsList()
          .equals(other.getRootsList())) return false;
      if (!getRootsProof()
          .equals(other.getRootsProof())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MAX_FIELD_NUMBER;
      hash = (53 * hash) + getMax().hashCode();
      if (getProofCount() > 0) {
        hash = (37 * hash) + PROOF_FIELD_NUMBER;
        hash = (53 * hash) + getProofList().hashCode();
      }
      if (getRootsCount() > 0) {
        hash = (37 * hash) + ROOTS_FIELD_NUMBER;
        hash = (53 * hash) + getRootsList().hashCode();
      }
      hash = (37 * hash) + ROOTS_PROOF_FIELD_NUMBER;
      hash = (53 * hash) + getRootsProof().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Remote changes response.
     * </pre>
     *
     * Protobuf type {@code RemoteChangesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RemoteChangesResponse)
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteChangesResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteChangesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.class, com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.Builder.class);
      }

      // Construct using com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRootsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        max_ = com.google.protobuf.ByteString.EMPTY;

        proof_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (rootsBuilder_ == null) {
          roots_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          rootsBuilder_.clear();
        }
        rootsProof_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.internal_static_RemoteChangesResponse_descriptor;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse getDefaultInstanceForType() {
        return com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse build() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse buildPartial() {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse result = new com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse(this);
        int from_bitField0_ = bitField0_;
        result.max_ = max_;
        if (((bitField0_ & 0x00000001) != 0)) {
          proof_ = java.util.Collections.unmodifiableList(proof_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.proof_ = proof_;
        if (rootsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            roots_ = java.util.Collections.unmodifiableList(roots_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.roots_ = roots_;
        } else {
          result.roots_ = rootsBuilder_.build();
        }
        result.rootsProof_ = rootsProof_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse) {
          return mergeFrom((com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse other) {
        if (other == com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse.getDefaultInstance()) return this;
        if (other.getMax() != com.google.protobuf.ByteString.EMPTY) {
          setMax(other.getMax());
        }
        if (!other.proof_.isEmpty()) {
          if (proof_.isEmpty()) {
            proof_ = other.proof_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureProofIsMutable();
            proof_.addAll(other.proof_);
          }
          onChanged();
        }
        if (rootsBuilder_ == null) {
          if (!other.roots_.isEmpty()) {
            if (roots_.isEmpty()) {
              roots_ = other.roots_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRootsIsMutable();
              roots_.addAll(other.roots_);
            }
            onChanged();
          }
        } else {
          if (!other.roots_.isEmpty()) {
            if (rootsBuilder_.isEmpty()) {
              rootsBuilder_.dispose();
              rootsBuilder_ = null;
              roots_ = other.roots_;
              bitField0_ = (bitField0_ & ~0x00000002);
              rootsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRootsFieldBuilder() : null;
            } else {
              rootsBuilder_.addAllMessages(other.roots_);
            }
          }
        }
        if (other.getRootsProof() != com.google.protobuf.ByteString.EMPTY) {
          setRootsProof(other.getRootsProof());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString max_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Proof has been generated using block with this number as a max block. Should be
       * less than or equal to the RemoteChangesRequest::max block number.
       * </pre>
       *
       * <code>bytes max = 2;</code>
       * @return The max.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMax() {
        return max_;
      }
      /**
       * <pre>
       * Proof has been generated using block with this number as a max block. Should be
       * less than or equal to the RemoteChangesRequest::max block number.
       * </pre>
       *
       * <code>bytes max = 2;</code>
       * @param value The max to set.
       * @return This builder for chaining.
       */
      public Builder setMax(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        max_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Proof has been generated using block with this number as a max block. Should be
       * less than or equal to the RemoteChangesRequest::max block number.
       * </pre>
       *
       * <code>bytes max = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMax() {
        
        max_ = getDefaultInstance().getMax();
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> proof_ = java.util.Collections.emptyList();
      private void ensureProofIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          proof_ = new java.util.ArrayList<com.google.protobuf.ByteString>(proof_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Changes proof.
       * </pre>
       *
       * <code>repeated bytes proof = 3;</code>
       * @return A list containing the proof.
       */
      public java.util.List<com.google.protobuf.ByteString>
          getProofList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(proof_) : proof_;
      }
      /**
       * <pre>
       * Changes proof.
       * </pre>
       *
       * <code>repeated bytes proof = 3;</code>
       * @return The count of proof.
       */
      public int getProofCount() {
        return proof_.size();
      }
      /**
       * <pre>
       * Changes proof.
       * </pre>
       *
       * <code>repeated bytes proof = 3;</code>
       * @param index The index of the element to return.
       * @return The proof at the given index.
       */
      public com.google.protobuf.ByteString getProof(int index) {
        return proof_.get(index);
      }
      /**
       * <pre>
       * Changes proof.
       * </pre>
       *
       * <code>repeated bytes proof = 3;</code>
       * @param index The index to set the value at.
       * @param value The proof to set.
       * @return This builder for chaining.
       */
      public Builder setProof(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureProofIsMutable();
        proof_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Changes proof.
       * </pre>
       *
       * <code>repeated bytes proof = 3;</code>
       * @param value The proof to add.
       * @return This builder for chaining.
       */
      public Builder addProof(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureProofIsMutable();
        proof_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Changes proof.
       * </pre>
       *
       * <code>repeated bytes proof = 3;</code>
       * @param values The proof to add.
       * @return This builder for chaining.
       */
      public Builder addAllProof(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureProofIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, proof_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Changes proof.
       * </pre>
       *
       * <code>repeated bytes proof = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearProof() {
        proof_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair> roots_ =
        java.util.Collections.emptyList();
      private void ensureRootsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          roots_ = new java.util.ArrayList<com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair>(roots_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair, com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.PairOrBuilder> rootsBuilder_;

      /**
       * <pre>
       * Changes tries roots missing on the requester' node.
       * </pre>
       *
       * <code>repeated .Pair roots = 4;</code>
       */
      public java.util.List<com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair> getRootsList() {
        if (rootsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(roots_);
        } else {
          return rootsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Changes tries roots missing on the requester' node.
       * </pre>
       *
       * <code>repeated .Pair roots = 4;</code>
       */
      public int getRootsCount() {
        if (rootsBuilder_ == null) {
          return roots_.size();
        } else {
          return rootsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Changes tries roots missing on the requester' node.
       * </pre>
       *
       * <code>repeated .Pair roots = 4;</code>
       */
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair getRoots(int index) {
        if (rootsBuilder_ == null) {
          return roots_.get(index);
        } else {
          return rootsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Changes tries roots missing on the requester' node.
       * </pre>
       *
       * <code>repeated .Pair roots = 4;</code>
       */
      public Builder setRoots(
          int index, com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair value) {
        if (rootsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootsIsMutable();
          roots_.set(index, value);
          onChanged();
        } else {
          rootsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Changes tries roots missing on the requester' node.
       * </pre>
       *
       * <code>repeated .Pair roots = 4;</code>
       */
      public Builder setRoots(
          int index, com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair.Builder builderForValue) {
        if (rootsBuilder_ == null) {
          ensureRootsIsMutable();
          roots_.set(index, builderForValue.build());
          onChanged();
        } else {
          rootsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Changes tries roots missing on the requester' node.
       * </pre>
       *
       * <code>repeated .Pair roots = 4;</code>
       */
      public Builder addRoots(com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair value) {
        if (rootsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootsIsMutable();
          roots_.add(value);
          onChanged();
        } else {
          rootsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Changes tries roots missing on the requester' node.
       * </pre>
       *
       * <code>repeated .Pair roots = 4;</code>
       */
      public Builder addRoots(
          int index, com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair value) {
        if (rootsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootsIsMutable();
          roots_.add(index, value);
          onChanged();
        } else {
          rootsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Changes tries roots missing on the requester' node.
       * </pre>
       *
       * <code>repeated .Pair roots = 4;</code>
       */
      public Builder addRoots(
          com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair.Builder builderForValue) {
        if (rootsBuilder_ == null) {
          ensureRootsIsMutable();
          roots_.add(builderForValue.build());
          onChanged();
        } else {
          rootsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Changes tries roots missing on the requester' node.
       * </pre>
       *
       * <code>repeated .Pair roots = 4;</code>
       */
      public Builder addRoots(
          int index, com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair.Builder builderForValue) {
        if (rootsBuilder_ == null) {
          ensureRootsIsMutable();
          roots_.add(index, builderForValue.build());
          onChanged();
        } else {
          rootsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Changes tries roots missing on the requester' node.
       * </pre>
       *
       * <code>repeated .Pair roots = 4;</code>
       */
      public Builder addAllRoots(
          java.lang.Iterable<? extends com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair> values) {
        if (rootsBuilder_ == null) {
          ensureRootsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, roots_);
          onChanged();
        } else {
          rootsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Changes tries roots missing on the requester' node.
       * </pre>
       *
       * <code>repeated .Pair roots = 4;</code>
       */
      public Builder clearRoots() {
        if (rootsBuilder_ == null) {
          roots_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          rootsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Changes tries roots missing on the requester' node.
       * </pre>
       *
       * <code>repeated .Pair roots = 4;</code>
       */
      public Builder removeRoots(int index) {
        if (rootsBuilder_ == null) {
          ensureRootsIsMutable();
          roots_.remove(index);
          onChanged();
        } else {
          rootsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Changes tries roots missing on the requester' node.
       * </pre>
       *
       * <code>repeated .Pair roots = 4;</code>
       */
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair.Builder getRootsBuilder(
          int index) {
        return getRootsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Changes tries roots missing on the requester' node.
       * </pre>
       *
       * <code>repeated .Pair roots = 4;</code>
       */
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.PairOrBuilder getRootsOrBuilder(
          int index) {
        if (rootsBuilder_ == null) {
          return roots_.get(index);  } else {
          return rootsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Changes tries roots missing on the requester' node.
       * </pre>
       *
       * <code>repeated .Pair roots = 4;</code>
       */
      public java.util.List<? extends com.limechain.network.substream.lightclient.pb.LightClientMessage.PairOrBuilder> 
           getRootsOrBuilderList() {
        if (rootsBuilder_ != null) {
          return rootsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(roots_);
        }
      }
      /**
       * <pre>
       * Changes tries roots missing on the requester' node.
       * </pre>
       *
       * <code>repeated .Pair roots = 4;</code>
       */
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair.Builder addRootsBuilder() {
        return getRootsFieldBuilder().addBuilder(
            com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair.getDefaultInstance());
      }
      /**
       * <pre>
       * Changes tries roots missing on the requester' node.
       * </pre>
       *
       * <code>repeated .Pair roots = 4;</code>
       */
      public com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair.Builder addRootsBuilder(
          int index) {
        return getRootsFieldBuilder().addBuilder(
            index, com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair.getDefaultInstance());
      }
      /**
       * <pre>
       * Changes tries roots missing on the requester' node.
       * </pre>
       *
       * <code>repeated .Pair roots = 4;</code>
       */
      public java.util.List<com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair.Builder> 
           getRootsBuilderList() {
        return getRootsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair, com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.PairOrBuilder> 
          getRootsFieldBuilder() {
        if (rootsBuilder_ == null) {
          rootsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair, com.limechain.network.substream.lightclient.pb.LightClientMessage.Pair.Builder, com.limechain.network.substream.lightclient.pb.LightClientMessage.PairOrBuilder>(
                  roots_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          roots_ = null;
        }
        return rootsBuilder_;
      }

      private com.google.protobuf.ByteString rootsProof_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Missing changes tries roots proof.
       * </pre>
       *
       * <code>bytes roots_proof = 5;</code>
       * @return The rootsProof.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getRootsProof() {
        return rootsProof_;
      }
      /**
       * <pre>
       * Missing changes tries roots proof.
       * </pre>
       *
       * <code>bytes roots_proof = 5;</code>
       * @param value The rootsProof to set.
       * @return This builder for chaining.
       */
      public Builder setRootsProof(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rootsProof_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Missing changes tries roots proof.
       * </pre>
       *
       * <code>bytes roots_proof = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearRootsProof() {
        
        rootsProof_ = getDefaultInstance().getRootsProof();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RemoteChangesResponse)
    }

    // @@protoc_insertion_point(class_scope:RemoteChangesResponse)
    private static final com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse();
    }

    public static com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RemoteChangesResponse>
        PARSER = new com.google.protobuf.AbstractParser<RemoteChangesResponse>() {
      @java.lang.Override
      public RemoteChangesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RemoteChangesResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RemoteChangesResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RemoteChangesResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.limechain.network.substream.lightclient.pb.LightClientMessage.RemoteChangesResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Pair_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Pair_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RemoteCallRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RemoteCallRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RemoteCallResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RemoteCallResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RemoteReadRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RemoteReadRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RemoteReadResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RemoteReadResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RemoteReadChildRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RemoteReadChildRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RemoteHeaderRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RemoteHeaderRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RemoteHeaderResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RemoteHeaderResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RemoteChangesRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RemoteChangesRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RemoteChangesResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RemoteChangesResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030LightClientMessage.proto\" \n\004Pair\022\013\n\003fs" +
      "t\030\001 \001(\014\022\013\n\003snd\030\002 \001(\014\"\250\002\n\007Request\0221\n\023remo" +
      "te_call_request\030\001 \001(\0132\022.RemoteCallReques" +
      "tH\000\0221\n\023remote_read_request\030\002 \001(\0132\022.Remot" +
      "eReadRequestH\000\0225\n\025remote_header_request\030" +
      "\003 \001(\0132\024.RemoteHeaderRequestH\000\022<\n\031remote_" +
      "read_child_request\030\004 \001(\0132\027.RemoteReadChi" +
      "ldRequestH\000\0227\n\026remote_changes_request\030\005 " +
      "\001(\0132\025.RemoteChangesRequestH\000B\t\n\007request\"" +
      "\364\001\n\010Response\0223\n\024remote_call_response\030\001 \001" +
      "(\0132\023.RemoteCallResponseH\000\0223\n\024remote_read" +
      "_response\030\002 \001(\0132\023.RemoteReadResponseH\000\0227" +
      "\n\026remote_header_response\030\003 \001(\0132\025.RemoteH" +
      "eaderResponseH\000\0229\n\027remote_changes_respon" +
      "se\030\004 \001(\0132\026.RemoteChangesResponseH\000B\n\n\010re" +
      "sponse\"@\n\021RemoteCallRequest\022\r\n\005block\030\002 \001" +
      "(\014\022\016\n\006method\030\003 \001(\t\022\014\n\004data\030\004 \001(\014\"#\n\022Remo" +
      "teCallResponse\022\r\n\005proof\030\002 \001(\014\"0\n\021RemoteR" +
      "eadRequest\022\r\n\005block\030\002 \001(\014\022\014\n\004keys\030\003 \003(\014\"" +
      "#\n\022RemoteReadResponse\022\r\n\005proof\030\002 \001(\014\"J\n\026" +
      "RemoteReadChildRequest\022\r\n\005block\030\002 \001(\014\022\023\n" +
      "\013storage_key\030\003 \001(\014\022\014\n\004keys\030\006 \003(\014\"$\n\023Remo" +
      "teHeaderRequest\022\r\n\005block\030\002 \001(\014\"5\n\024Remote" +
      "HeaderResponse\022\016\n\006header\030\002 \001(\014\022\r\n\005proof\030" +
      "\003 \001(\014\"o\n\024RemoteChangesRequest\022\r\n\005first\030\002" +
      " \001(\014\022\014\n\004last\030\003 \001(\014\022\013\n\003min\030\004 \001(\014\022\013\n\003max\030\005" +
      " \001(\014\022\023\n\013storage_key\030\006 \001(\014\022\013\n\003key\030\007 \001(\014\"^" +
      "\n\025RemoteChangesResponse\022\013\n\003max\030\002 \001(\014\022\r\n\005" +
      "proof\030\003 \003(\014\022\024\n\005roots\030\004 \003(\0132\005.Pair\022\023\n\013roo" +
      "ts_proof\030\005 \001(\014B0\n.com.limechain.network." +
      "substream.lightclient.pbb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_Pair_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Pair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Pair_descriptor,
        new java.lang.String[] { "Fst", "Snd", });
    internal_static_Request_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Request_descriptor,
        new java.lang.String[] { "RemoteCallRequest", "RemoteReadRequest", "RemoteHeaderRequest", "RemoteReadChildRequest", "RemoteChangesRequest", "Request", });
    internal_static_Response_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Response_descriptor,
        new java.lang.String[] { "RemoteCallResponse", "RemoteReadResponse", "RemoteHeaderResponse", "RemoteChangesResponse", "Response", });
    internal_static_RemoteCallRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_RemoteCallRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RemoteCallRequest_descriptor,
        new java.lang.String[] { "Block", "Method", "Data", });
    internal_static_RemoteCallResponse_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_RemoteCallResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RemoteCallResponse_descriptor,
        new java.lang.String[] { "Proof", });
    internal_static_RemoteReadRequest_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_RemoteReadRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RemoteReadRequest_descriptor,
        new java.lang.String[] { "Block", "Keys", });
    internal_static_RemoteReadResponse_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_RemoteReadResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RemoteReadResponse_descriptor,
        new java.lang.String[] { "Proof", });
    internal_static_RemoteReadChildRequest_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_RemoteReadChildRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RemoteReadChildRequest_descriptor,
        new java.lang.String[] { "Block", "StorageKey", "Keys", });
    internal_static_RemoteHeaderRequest_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_RemoteHeaderRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RemoteHeaderRequest_descriptor,
        new java.lang.String[] { "Block", });
    internal_static_RemoteHeaderResponse_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_RemoteHeaderResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RemoteHeaderResponse_descriptor,
        new java.lang.String[] { "Header", "Proof", });
    internal_static_RemoteChangesRequest_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_RemoteChangesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RemoteChangesRequest_descriptor,
        new java.lang.String[] { "First", "Last", "Min", "Max", "StorageKey", "Key", });
    internal_static_RemoteChangesResponse_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_RemoteChangesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RemoteChangesResponse_descriptor,
        new java.lang.String[] { "Max", "Proof", "Roots", "RootsProof", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
